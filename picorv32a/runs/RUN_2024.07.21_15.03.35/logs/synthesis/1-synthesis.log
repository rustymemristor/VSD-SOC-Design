
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /openlane/designs/picorv32a/src/sky130_fd_sc_hd__typical.lib
Imported 429 cell types from liberty file.

2. Executing Verilog-2005 frontend: ./designs/picorv32a/src/picorv32a.v
Parsing SystemVerilog input from `./designs/picorv32a/src/picorv32a.v' to AST representation.
Storing AST representation for module `$abstract\picorv32a'.
Storing AST representation for module `$abstract\picorv32_regs'.
Storing AST representation for module `$abstract\picorv32_pcpi_mul'.
Storing AST representation for module `$abstract\picorv32_pcpi_fast_mul'.
Storing AST representation for module `$abstract\picorv32_pcpi_div'.
Storing AST representation for module `$abstract\picorv32_axi'.
Storing AST representation for module `$abstract\picorv32_axi_adapter'.
Storing AST representation for module `$abstract\picorv32_wb'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

4. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32a'.
Generating RTLIL representation for module `\picorv32a'.

4.1. Analyzing design hierarchy..
Top module:  \picorv32a

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.

4.3. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul

4.4. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul
Removing unused module `$abstract\picorv32_wb'.
Removing unused module `$abstract\picorv32_axi_adapter'.
Removing unused module `$abstract\picorv32_axi'.
Removing unused module `$abstract\picorv32_pcpi_div'.
Removing unused module `$abstract\picorv32_pcpi_fast_mul'.
Removing unused module `$abstract\picorv32_pcpi_mul'.
Removing unused module `$abstract\picorv32_regs'.
Removing unused module `$abstract\picorv32a'.
Removed 8 unused modules.

5. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/picorv32a/runs/RUN_2024.07.21_15.03.35/tmp/synthesis/hierarchy.dot'.
Dumping module picorv32a to page 1.
Renaming module picorv32a to picorv32a.

6. Executing TRIBUF pass.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul

7.2. Analyzing design hierarchy..
Top module:  \picorv32a
Used module:     \picorv32_pcpi_fast_mul
Removed 0 unused modules.

8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:0$685'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:0$685'.
Found and cleaned up 16 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$490'.
Found and cleaned up 6 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:529$129'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:529$129'.
Cleaned up 24 empty switches.

9. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 36 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1374$505 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1315$481 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1287$469 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1273$464 in module picorv32a.
Marked 8 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:1164$429 in module picorv32a.
Marked 3 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:839$169 in module picorv32a.
Marked 3 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:790$167 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:759$163 in module picorv32a.
Marked 47 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:683$162 in module picorv32a.
Marked 4 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:548$138 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:413$100 in module picorv32a.
Removed 2 dead cases from process $proc$./designs/picorv32a/src/picorv32a.v:384$97 in module picorv32a.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:384$97 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:373$92 in module picorv32a.
Marked 1 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:308$18 in module picorv32a.
Marked 3 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:2306$701 in module picorv32_pcpi_fast_mul.
Marked 2 switch rules as full_case in process $proc$./designs/picorv32a/src/picorv32a.v:2276$694 in module picorv32_pcpi_fast_mul.
Removed a total of 2 dead cases.

10. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 5 redundant assignments.
Promoted 64 assignments to connections.

11. Executing PROC_INIT pass (extract init attributes).

12. Executing PROC_ARST pass (detect async resets in processes).

13. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~197 debug messages>

14. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
     1/79: $17\next_irq_pending[2:2]
     2/79: $16\next_irq_pending[2:2]
     3/79: $15\next_irq_pending[2:2]
     4/79: $14\next_irq_pending[2:2]
     5/79: $13\next_irq_pending[2:2]
     6/79: $12\next_irq_pending[2:2]
     7/79: $11\next_irq_pending[2:2]
     8/79: $5\next_irq_pending[31:0] [31:2]
     9/79: $3\set_mem_do_rdata[0:0]
    10/79: $5\next_irq_pending[31:0] [1]
    11/79: $3\set_mem_do_wdata[0:0]
    12/79: $5\next_irq_pending[31:0] [0]
    13/79: $4\set_mem_do_rinst[0:0]
    14/79: $3\set_mem_do_rinst[0:0]
    15/79: $4\set_mem_do_wdata[0:0]
    16/79: $9\next_irq_pending[1:1]
    17/79: $8\next_irq_pending[1:1]
    18/79: $7\next_irq_pending[1:1]
    19/79: $4\set_mem_do_rdata[0:0]
    20/79: $5\set_mem_do_rinst[0:0]
    21/79: $10\next_irq_pending[1:1]
    22/79: $6\next_irq_pending[31:0]
    23/79: $3\current_pc[31:0]
    24/79: $2\current_pc[31:0]
    25/79: $2\set_mem_do_wdata[0:0]
    26/79: $2\set_mem_do_rdata[0:0]
    27/79: $2\set_mem_do_rinst[0:0]
    28/79: $4\next_irq_pending[31:0]
    29/79: $1\current_pc[31:0]
    30/79: $1\set_mem_do_wdata[0:0]
    31/79: $1\set_mem_do_rdata[0:0]
    32/79: $1\set_mem_do_rinst[0:0]
    33/79: $0\trace_data[35:0]
    34/79: $3\next_irq_pending[31:0]
    35/79: $2\next_irq_pending[0:0]
    36/79: $1\next_irq_pending[0:0]
    37/79: $0\count_cycle[63:0]
    38/79: $0\pcpi_timeout[0:0]
    39/79: $0\trace_valid[0:0]
    40/79: $0\do_waitirq[0:0]
    41/79: $0\decoder_pseudo_trigger[0:0]
    42/79: $0\decoder_trigger[0:0]
    43/79: $0\alu_wait_2[0:0]
    44/79: $0\alu_wait[0:0]
    45/79: $0\reg_out[31:0]
    46/79: $0\reg_sh[4:0]
    47/79: $0\trap[0:0]
    48/79: $0\pcpi_timeout_counter[3:0]
    49/79: $0\latched_rd[4:0]
    50/79: $0\latched_is_lb[0:0]
    51/79: $0\latched_is_lh[0:0]
    52/79: $0\latched_is_lu[0:0]
    53/79: $0\latched_trace[0:0]
    54/79: $0\latched_compr[0:0]
    55/79: $0\latched_branch[0:0]
    56/79: $0\latched_stalu[0:0]
    57/79: $0\latched_store[0:0]
    58/79: $0\irq_state[1:0]
    59/79: $0\cpu_state[7:0]
    60/79: $0\dbg_rs2val_valid[0:0]
    61/79: $0\dbg_rs1val_valid[0:0]
    62/79: $0\dbg_rs2val[31:0]
    63/79: $0\dbg_rs1val[31:0]
    64/79: $0\mem_do_wdata[0:0]
    65/79: $0\mem_do_rdata[0:0]
    66/79: $0\mem_do_rinst[0:0]
    67/79: $0\mem_do_prefetch[0:0]
    68/79: $0\mem_wordsize[1:0]
    69/79: $0\timer[31:0]
    70/79: $0\irq_mask[31:0]
    71/79: $0\irq_active[0:0]
    72/79: $0\irq_delay[0:0]
    73/79: $0\reg_op2[31:0]
    74/79: $0\reg_op1[31:0]
    75/79: $0\reg_next_pc[31:0]
    76/79: $0\reg_pc[31:0]
    77/79: $0\count_instr[63:0]
    78/79: $0\eoi[31:0]
    79/79: $0\pcpi_valid[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$490'.
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$481'.
     1/3: $1$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$489
     2/3: $1$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_DATA[31:0]$488
     3/3: $1$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_ADDR[4:0]$487
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$469'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$464'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1271$463'.
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$441'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$429'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
     1/76: $0\decoded_rs1[4:0] [4]
     2/76: $0\decoded_imm_uj[31:0] [10]
     3/76: $0\decoded_imm_uj[31:0] [7]
     4/76: $0\decoded_imm_uj[31:0] [6]
     5/76: $0\decoded_imm_uj[31:0] [3:1]
     6/76: $0\decoded_imm_uj[31:0] [5]
     7/76: $0\decoded_imm_uj[31:0] [9:8]
     8/76: $0\decoded_imm_uj[31:0] [31:20]
     9/76: $0\decoded_imm_uj[31:0] [4]
    10/76: $0\decoded_imm_uj[31:0] [11]
    11/76: $0\decoded_imm_uj[31:0] [0]
    12/76: $0\decoded_rs1[4:0] [3:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[4:0]
    26/76: $0\decoded_imm_uj[31:0] [19:12]
    27/76: $0\decoded_rd[4:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$162'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$100'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$97'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$92'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$18'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$701'.
     1/4: $0\active[3:0] [3:1]
     2/4: $0\active[3:0] [0]
     3/4: $0\rs2[32:0]
     4/4: $0\rs1[32:0]
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
     1/4: $0\rd_q[63:0]
     2/4: $0\rd[63:0]
     3/4: $0\rs2_q[32:0]
     4/4: $0\rs1_q[32:0]
Creating decoders for process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$694'.
     1/8: $2\instr_mul[0:0]
     2/8: $2\instr_mulhu[0:0]
     3/8: $2\instr_mulhsu[0:0]
     4/8: $2\instr_mulh[0:0]
     5/8: $1\instr_mulhu[0:0]
     6/8: $1\instr_mulhsu[0:0]
     7/8: $1\instr_mulh[0:0]
     8/8: $1\instr_mul[0:0]

15. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\picorv32a.\cpuregs_rs1' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$490'.
No latch inferred for signal `\picorv32a.\cpuregs_rs2' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$490'.
No latch inferred for signal `\picorv32a.\decoded_rs' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$490'.
No latch inferred for signal `\picorv32a.\cpuregs_write' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$469'.
No latch inferred for signal `\picorv32a.\cpuregs_wrdata' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$469'.
No latch inferred for signal `\picorv32a.\clear_prefetched_high_word' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$464'.
No latch inferred for signal `\picorv32a.\alu_out' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$441'.
No latch inferred for signal `\picorv32a.\alu_out_0' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$441'.
No latch inferred for signal `\picorv32a.\dbg_ascii_state' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$429'.
No latch inferred for signal `\picorv32a.\dbg_insn_opcode' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
No latch inferred for signal `\picorv32a.\dbg_ascii_instr' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_imm' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_rs1' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_rs2' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
No latch inferred for signal `\picorv32a.\dbg_insn_rd' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
No latch inferred for signal `\picorv32a.\new_ascii_instr' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$162'.
No latch inferred for signal `\picorv32a.\mem_la_wdata' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$97'.
No latch inferred for signal `\picorv32a.\mem_la_wstrb' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$97'.
No latch inferred for signal `\picorv32a.\mem_rdata_word' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$97'.
No latch inferred for signal `\picorv32a.\pcpi_int_wr' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$18'.
No latch inferred for signal `\picorv32a.\pcpi_int_rd' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$18'.
No latch inferred for signal `\picorv32a.\pcpi_int_wait' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$18'.
No latch inferred for signal `\picorv32a.\pcpi_int_ready' from process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$18'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mul' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$694'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulh' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$694'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulhsu' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$694'.
No latch inferred for signal `\picorv32_pcpi_fast_mul.\instr_mulhu' from process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$694'.

16. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\picorv32a.\trap' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3331' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3332' with positive edge clock.
Creating register for signal `\picorv32a.\eoi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3333' with positive edge clock.
Creating register for signal `\picorv32a.\trace_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3334' with positive edge clock.
Creating register for signal `\picorv32a.\trace_data' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3335' with positive edge clock.
Creating register for signal `\picorv32a.\count_cycle' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3336' with positive edge clock.
Creating register for signal `\picorv32a.\count_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3337' with positive edge clock.
Creating register for signal `\picorv32a.\reg_pc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3338' with positive edge clock.
Creating register for signal `\picorv32a.\reg_next_pc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3339' with positive edge clock.
Creating register for signal `\picorv32a.\reg_op1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3340' with positive edge clock.
Creating register for signal `\picorv32a.\reg_op2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3341' with positive edge clock.
Creating register for signal `\picorv32a.\reg_out' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3342' with positive edge clock.
Creating register for signal `\picorv32a.\reg_sh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3343' with positive edge clock.
Creating register for signal `\picorv32a.\irq_delay' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3344' with positive edge clock.
Creating register for signal `\picorv32a.\irq_active' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3345' with positive edge clock.
Creating register for signal `\picorv32a.\irq_mask' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3346' with positive edge clock.
Creating register for signal `\picorv32a.\irq_pending' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3347' with positive edge clock.
Creating register for signal `\picorv32a.\timer' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3348' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wordsize' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3349' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_prefetch' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3350' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_rinst' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3351' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_rdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3352' with positive edge clock.
Creating register for signal `\picorv32a.\mem_do_wdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3353' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_trigger' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3354' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_trigger_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3355' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_pseudo_trigger' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3356' with positive edge clock.
Creating register for signal `\picorv32a.\decoder_pseudo_trigger_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3357' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs1val' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3358' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs2val' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3359' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs1val_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3360' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_rs2val_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3361' with positive edge clock.
Creating register for signal `\picorv32a.\cpu_state' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3362' with positive edge clock.
Creating register for signal `\picorv32a.\irq_state' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3363' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_rinst' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3364' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_rdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3365' with positive edge clock.
Creating register for signal `\picorv32a.\set_mem_do_wdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3366' with positive edge clock.
Creating register for signal `\picorv32a.\latched_store' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3367' with positive edge clock.
Creating register for signal `\picorv32a.\latched_stalu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3368' with positive edge clock.
Creating register for signal `\picorv32a.\latched_branch' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3369' with positive edge clock.
Creating register for signal `\picorv32a.\latched_compr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3370' with positive edge clock.
Creating register for signal `\picorv32a.\latched_trace' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3371' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3372' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3373' with positive edge clock.
Creating register for signal `\picorv32a.\latched_is_lb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3374' with positive edge clock.
Creating register for signal `\picorv32a.\latched_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3375' with positive edge clock.
Creating register for signal `\picorv32a.\current_pc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3376' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_timeout_counter' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3377' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_timeout' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3378' with positive edge clock.
Creating register for signal `\picorv32a.\next_irq_pending' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3379' with positive edge clock.
Creating register for signal `\picorv32a.\do_waitirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3380' with positive edge clock.
Creating register for signal `\picorv32a.\alu_out_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3381' with positive edge clock.
Creating register for signal `\picorv32a.\alu_out_0_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3382' with positive edge clock.
Creating register for signal `\picorv32a.\alu_wait' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3383' with positive edge clock.
Creating register for signal `\picorv32a.\alu_wait_2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
  created $dff cell `$procdff$3384' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_ADDR' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$481'.
  created $dff cell `$procdff$3385' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_DATA' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$481'.
  created $dff cell `$procdff$3386' with positive edge clock.
Creating register for signal `\picorv32a.$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$481'.
  created $dff cell `$procdff$3387' with positive edge clock.
Creating register for signal `\picorv32a.\clear_prefetched_high_word_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1271$463'.
  created $dff cell `$procdff$3388' with positive edge clock.
Creating register for signal `\picorv32a.\pcpi_insn' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3389' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lui' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3390' with positive edge clock.
Creating register for signal `\picorv32a.\instr_auipc' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3391' with positive edge clock.
Creating register for signal `\picorv32a.\instr_jal' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3392' with positive edge clock.
Creating register for signal `\picorv32a.\instr_jalr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3393' with positive edge clock.
Creating register for signal `\picorv32a.\instr_beq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3394' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bne' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3395' with positive edge clock.
Creating register for signal `\picorv32a.\instr_blt' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3396' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bge' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3397' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3398' with positive edge clock.
Creating register for signal `\picorv32a.\instr_bgeu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3399' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3400' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3401' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3402' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lbu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3403' with positive edge clock.
Creating register for signal `\picorv32a.\instr_lhu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3404' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3405' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3406' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3407' with positive edge clock.
Creating register for signal `\picorv32a.\instr_addi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3408' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slti' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3409' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sltiu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3410' with positive edge clock.
Creating register for signal `\picorv32a.\instr_xori' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3411' with positive edge clock.
Creating register for signal `\picorv32a.\instr_ori' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3412' with positive edge clock.
Creating register for signal `\picorv32a.\instr_andi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3413' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slli' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3414' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srli' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3415' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srai' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3416' with positive edge clock.
Creating register for signal `\picorv32a.\instr_add' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3417' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sub' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3418' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sll' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3419' with positive edge clock.
Creating register for signal `\picorv32a.\instr_slt' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3420' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3421' with positive edge clock.
Creating register for signal `\picorv32a.\instr_xor' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3422' with positive edge clock.
Creating register for signal `\picorv32a.\instr_srl' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3423' with positive edge clock.
Creating register for signal `\picorv32a.\instr_sra' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3424' with positive edge clock.
Creating register for signal `\picorv32a.\instr_or' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3425' with positive edge clock.
Creating register for signal `\picorv32a.\instr_and' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3426' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdcycle' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3427' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdcycleh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3428' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdinstr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3429' with positive edge clock.
Creating register for signal `\picorv32a.\instr_rdinstrh' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3430' with positive edge clock.
Creating register for signal `\picorv32a.\instr_ecall_ebreak' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3431' with positive edge clock.
Creating register for signal `\picorv32a.\instr_getq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3432' with positive edge clock.
Creating register for signal `\picorv32a.\instr_setq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3433' with positive edge clock.
Creating register for signal `\picorv32a.\instr_retirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3434' with positive edge clock.
Creating register for signal `\picorv32a.\instr_maskirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3435' with positive edge clock.
Creating register for signal `\picorv32a.\instr_waitirq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3436' with positive edge clock.
Creating register for signal `\picorv32a.\instr_timer' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3437' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3438' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rs1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3439' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_rs2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3440' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3441' with positive edge clock.
Creating register for signal `\picorv32a.\decoded_imm_uj' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3442' with positive edge clock.
Creating register for signal `\picorv32a.\compressed_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3443' with positive edge clock.
Creating register for signal `\picorv32a.\is_lui_auipc_jal' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3444' with positive edge clock.
Creating register for signal `\picorv32a.\is_lb_lh_lw_lbu_lhu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3445' with positive edge clock.
Creating register for signal `\picorv32a.\is_slli_srli_srai' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3446' with positive edge clock.
Creating register for signal `\picorv32a.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3447' with positive edge clock.
Creating register for signal `\picorv32a.\is_sb_sh_sw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3448' with positive edge clock.
Creating register for signal `\picorv32a.\is_sll_srl_sra' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3449' with positive edge clock.
Creating register for signal `\picorv32a.\is_lui_auipc_jal_jalr_addi_add_sub' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3450' with positive edge clock.
Creating register for signal `\picorv32a.\is_slti_blt_slt' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3451' with positive edge clock.
Creating register for signal `\picorv32a.\is_sltiu_bltu_sltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3452' with positive edge clock.
Creating register for signal `\picorv32a.\is_beq_bne_blt_bge_bltu_bgeu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3453' with positive edge clock.
Creating register for signal `\picorv32a.\is_lbu_lhu_lw' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3454' with positive edge clock.
Creating register for signal `\picorv32a.\is_alu_reg_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3455' with positive edge clock.
Creating register for signal `\picorv32a.\is_alu_reg_reg' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3456' with positive edge clock.
Creating register for signal `\picorv32a.\is_compare' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
  created $dff cell `$procdff$3457' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_insn_addr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3458' with positive edge clock.
Creating register for signal `\picorv32a.\q_ascii_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3459' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3460' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_opcode' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3461' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rs1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3462' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rs2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3463' with positive edge clock.
Creating register for signal `\picorv32a.\q_insn_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3464' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_next' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3465' with positive edge clock.
Creating register for signal `\picorv32a.\dbg_valid_insn' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3466' with positive edge clock.
Creating register for signal `\picorv32a.\cached_ascii_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3467' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_imm' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3468' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_opcode' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3469' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rs1' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3470' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rs2' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3471' with positive edge clock.
Creating register for signal `\picorv32a.\cached_insn_rd' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
  created $dff cell `$procdff$3472' with positive edge clock.
Creating register for signal `\picorv32a.\mem_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3473' with positive edge clock.
Creating register for signal `\picorv32a.\mem_instr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3474' with positive edge clock.
Creating register for signal `\picorv32a.\mem_addr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3475' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wdata' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3476' with positive edge clock.
Creating register for signal `\picorv32a.\mem_wstrb' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3477' with positive edge clock.
Creating register for signal `\picorv32a.\mem_state' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3478' with positive edge clock.
Creating register for signal `\picorv32a.\mem_la_secondword' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3479' with positive edge clock.
Creating register for signal `\picorv32a.\prefetched_high_word' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3480' with positive edge clock.
Creating register for signal `\picorv32a.\mem_16bit_buffer' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
  created $dff cell `$procdff$3481' with positive edge clock.
Creating register for signal `\picorv32a.\alu_add_sub' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
  created $dff cell `$procdff$3482' with positive edge clock.
Creating register for signal `\picorv32a.\alu_shl' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
  created $dff cell `$procdff$3483' with positive edge clock.
Creating register for signal `\picorv32a.\alu_shr' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
  created $dff cell `$procdff$3484' with positive edge clock.
Creating register for signal `\picorv32a.\alu_eq' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
  created $dff cell `$procdff$3485' with positive edge clock.
Creating register for signal `\picorv32a.\alu_ltu' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
  created $dff cell `$procdff$3486' with positive edge clock.
Creating register for signal `\picorv32a.\alu_lts' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
  created $dff cell `$procdff$3487' with positive edge clock.
Creating register for signal `\picorv32a.\next_insn_opcode' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$100'.
  created $dff cell `$procdff$3488' with positive edge clock.
Creating register for signal `\picorv32a.\mem_rdata_q' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$100'.
  created $dff cell `$procdff$3489' with positive edge clock.
Creating register for signal `\picorv32a.\mem_la_firstword_reg' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$92'.
  created $dff cell `$procdff$3490' with positive edge clock.
Creating register for signal `\picorv32a.\last_mem_valid' using process `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$92'.
  created $dff cell `$procdff$3491' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\shift_out' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$701'.
  created $dff cell `$procdff$3492' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\active' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$701'.
  created $dff cell `$procdff$3493' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs1' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$701'.
  created $dff cell `$procdff$3494' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs2' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$701'.
  created $dff cell `$procdff$3495' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs1_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
  created $dff cell `$procdff$3496' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rs2_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
  created $dff cell `$procdff$3497' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rd' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
  created $dff cell `$procdff$3498' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\rd_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
  created $dff cell `$procdff$3499' with positive edge clock.
Creating register for signal `\picorv32_pcpi_fast_mul.\pcpi_insn_valid_q' using process `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
  created $dff cell `$procdff$3500' with positive edge clock.

17. Executing PROC_MEMWR pass (convert process memory writes to cells).

18. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 55 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1374$505'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1320$490'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$481'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1315$481'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$469'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1287$469'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$464'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1273$464'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1271$463'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$441'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1227$441'.
Found and cleaned up 8 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$429'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1164$429'.
Found and cleaned up 22 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:839$169'.
Found and cleaned up 3 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:790$167'.
Found and cleaned up 5 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:759$163'.
Found and cleaned up 47 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$162'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:683$162'.
Found and cleaned up 16 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:548$138'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:1208$674'.
Found and cleaned up 19 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$100'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:413$100'.
Found and cleaned up 3 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$97'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:384$97'.
Found and cleaned up 2 empty switches in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$92'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:373$92'.
Found and cleaned up 1 empty switch in `\picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$18'.
Removing empty process `picorv32a.$proc$./designs/picorv32a/src/picorv32a.v:308$18'.
Found and cleaned up 4 empty switches in `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$701'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2306$701'.
Found and cleaned up 3 empty switches in `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2292$696'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$694'.
Removing empty process `picorv32_pcpi_fast_mul.$proc$./designs/picorv32a/src/picorv32a.v:2276$694'.
Cleaned up 197 empty switches.

19. Executing CHECK pass (checking for obvious problems).
Checking module picorv32a...
Checking module picorv32_pcpi_fast_mul...
Found and reported 0 problems.

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~522 debug messages>
Optimizing module picorv32_pcpi_fast_mul.
<suppressed ~12 debug messages>

21. Executing FLATTEN pass (flatten design).
Deleting now unused module picorv32_pcpi_fast_mul.
<suppressed ~1 debug messages>

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~2 debug messages>

23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 624 unused cells and 1942 unused wires.
<suppressed ~679 debug messages>

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~744 debug messages>
Removed a total of 248 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$3260: \genblk1.pcpi_mul.active [1] -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1011.
    dead port 2/2 on $mux $procmux$1024.
    dead port 2/2 on $mux $procmux$1037.
    dead port 2/2 on $mux $procmux$1077.
    dead port 1/4 on $pmux $procmux$1175.
    dead port 1/4 on $pmux $procmux$1197.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$3296.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$3302.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$3309.
    dead port 2/2 on $mux $flatten\genblk1.pcpi_mul.$procmux$3317.
    dead port 1/4 on $pmux $procmux$1544.
    dead port 2/11 on $pmux $procmux$1559.
    dead port 1/4 on $pmux $procmux$1707.
    dead port 2/2 on $mux $procmux$2066.
    dead port 2/2 on $mux $procmux$2075.
    dead port 2/2 on $mux $procmux$3221.
    dead port 2/2 on $mux $procmux$3228.
    dead port 2/3 on $pmux $procmux$3255.
    dead port 3/3 on $pmux $procmux$3255.
    dead port 2/2 on $mux $procmux$3260.
    dead port 2/2 on $mux $procmux$711.
    dead port 2/2 on $mux $procmux$721.
    dead port 2/2 on $mux $procmux$723.
    dead port 2/2 on $mux $procmux$729.
    dead port 2/2 on $mux $procmux$736.
    dead port 2/2 on $mux $procmux$738.
    dead port 2/2 on $mux $procmux$744.
    dead port 2/2 on $mux $procmux$760.
    dead port 2/2 on $mux $procmux$766.
    dead port 2/2 on $mux $procmux$769.
    dead port 2/2 on $mux $procmux$782.
    dead port 2/2 on $mux $procmux$789.
    dead port 2/2 on $mux $procmux$792.
    dead port 2/2 on $mux $procmux$805.
    dead port 1/2 on $mux $procmux$815.
    dead port 2/2 on $mux $procmux$817.
    dead port 2/2 on $mux $procmux$820.
    dead port 2/2 on $mux $procmux$829.
    dead port 2/2 on $mux $procmux$832.
    dead port 2/2 on $mux $procmux$840.
    dead port 2/2 on $mux $procmux$842.
    dead port 2/2 on $mux $procmux$845.
    dead port 1/2 on $mux $procmux$859.
    dead port 2/2 on $mux $procmux$861.
    dead port 2/2 on $mux $procmux$863.
    dead port 2/2 on $mux $procmux$866.
    dead port 2/2 on $mux $procmux$879.
    dead port 2/2 on $mux $procmux$881.
    dead port 2/2 on $mux $procmux$884.
    dead port 2/2 on $mux $procmux$896.
    dead port 2/2 on $mux $procmux$899.
    dead port 2/2 on $mux $procmux$906.
    dead port 2/2 on $mux $procmux$908.
    dead port 2/2 on $mux $procmux$911.
    dead port 2/2 on $mux $procmux$921.
    dead port 1/2 on $mux $procmux$924.
    dead port 2/2 on $mux $procmux$926.
    dead port 2/2 on $mux $procmux$929.
    dead port 2/2 on $mux $procmux$943.
    dead port 1/2 on $mux $procmux$946.
    dead port 2/2 on $mux $procmux$948.
    dead port 2/2 on $mux $procmux$950.
    dead port 2/2 on $mux $procmux$953.
    dead port 2/2 on $mux $procmux$965.
    dead port 2/2 on $mux $procmux$968.
Removed 65 multiplexer ports.
<suppressed ~167 debug messages>

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1001: { $procmux$1003_CMP $auto$opt_reduce.cc:134:opt_pmux$3503 }
    New ctrl vector for $pmux cell $procmux$1014: { $auto$opt_reduce.cc:134:opt_pmux$3505 $procmux$1002_CMP }
    New ctrl vector for $pmux cell $procmux$1027: { $procmux$1005_CMP $auto$opt_reduce.cc:134:opt_pmux$3507 }
    New ctrl vector for $pmux cell $procmux$1197: $auto$opt_reduce.cc:134:opt_pmux$3509
    New ctrl vector for $pmux cell $procmux$1203: $auto$opt_reduce.cc:134:opt_pmux$3511
    New ctrl vector for $pmux cell $procmux$1241: { \is_rdcycle_rdcycleh_rdinstr_rdinstrh $auto$opt_reduce.cc:134:opt_pmux$3513 \instr_retirq \instr_maskirq \instr_timer }
    New ctrl vector for $pmux cell $procmux$1277: { $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y $procmux$1004_CMP }
    New ctrl vector for $pmux cell $procmux$1457: { $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y $procmux$1007_CMP $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y $procmux$1005_CMP $auto$opt_reduce.cc:134:opt_pmux$3515 }
    New ctrl vector for $pmux cell $procmux$1480: $auto$opt_reduce.cc:134:opt_pmux$3517
    New ctrl vector for $pmux cell $procmux$1559: { $auto$opt_reduce.cc:134:opt_pmux$3521 $logic_and$./designs/picorv32a/src/picorv32a.v:1674$588_Y $auto$opt_reduce.cc:134:opt_pmux$3519 }
    New ctrl vector for $pmux cell $procmux$1936: { \is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_pmux$3523 }
    Consolidated identical input bits for $mux cell $procmux$2051:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484
      New ports: A=1'0, B=1'1, Y=$0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0]
      New connections: $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [31:1] = { $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] $0$memwr$\cpuregs$./designs/picorv32a/src/picorv32a.v:1317$17_EN[31:0]$484 [0] }
    New ctrl vector for $pmux cell $procmux$2061: $auto$opt_reduce.cc:134:opt_pmux$3525
    New ctrl vector for $pmux cell $procmux$750: { $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y $auto$opt_reduce.cc:134:opt_pmux$3527 }
    New ctrl vector for $pmux cell $procmux$772: { $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y $auto$opt_reduce.cc:134:opt_pmux$3529 }
    New ctrl vector for $pmux cell $procmux$795: { $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y $auto$opt_reduce.cc:134:opt_pmux$3531 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3510: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3516: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3518: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3520: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3522: { \instr_timer \instr_maskirq \instr_retirq \instr_setq \instr_getq \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
  Optimizing cells in module \picorv32a.
Performed a total of 24 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$3334 ($dff) from module picorv32a.
Setting constant 1-bit at position 0 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 1 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 2 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 3 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 4 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 5 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 6 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 7 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 8 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 9 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 10 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 11 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 12 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 13 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 14 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 15 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 16 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 17 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 18 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 19 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 20 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 21 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 22 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 23 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 24 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 25 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 26 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 27 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 28 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 29 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 30 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 31 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 32 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 33 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 34 on $procdff$3335 ($dff) from module picorv32a.
Setting constant 1-bit at position 35 on $procdff$3335 ($dff) from module picorv32a.

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 323 unused wires.
<suppressed ~1 debug messages>

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~4 debug messages>

24.9. Rerunning OPT passes. (Maybe there is more to do..)

24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New ctrl vector for $pmux cell $procmux$1128: $auto$opt_reduce.cc:134:opt_pmux$3533
    New ctrl vector for $pmux cell $procmux$1145: { $procmux$1005_CMP $auto$opt_reduce.cc:134:opt_pmux$3535 }
    New ctrl vector for $pmux cell $procmux$1191: { $procmux$1007_CMP $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y }
    New ctrl vector for $pmux cell $procmux$1522: { $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y $procmux$1007_CMP $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y $procmux$1005_CMP $procmux$1004_CMP $auto$opt_reduce.cc:134:opt_pmux$3537 }
    New ctrl vector for $pmux cell $procmux$2980: { $logic_and$./designs/picorv32a/src/picorv32a.v:363$67_Y $auto$opt_reduce.cc:134:opt_pmux$3539 }
  Optimizing cells in module \picorv32a.
Performed a total of 5 changes.

24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

24.13. Executing OPT_DFF pass (perform DFF optimizations).

24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

24.16. Rerunning OPT passes. (Maybe there is more to do..)

24.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

24.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

24.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

24.20. Executing OPT_DFF pass (perform DFF optimizations).

24.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

24.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

24.23. Finished OPT passes. (There is nothing left to do.)

25. Executing FSM pass (extract and optimize FSM).

25.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register picorv32a.cpu_state.
Not marking picorv32a.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking picorv32a.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register picorv32a.mem_wordsize.

25.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cpu_state' from module `\picorv32a'.
  found $dff cell for state register: $procdff$3362
  root of input selection tree: $0\cpu_state[7:0]
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1909$662_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1893$644_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3533
  found ctrl input: $procmux$1004_CMP
  found ctrl input: $procmux$1005_CMP
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y
  found ctrl input: $procmux$1007_CMP
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$629_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1850$633_Y
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1809$611_Y
  found ctrl input: \alu_wait
  found ctrl input: \is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \mem_done
  found ctrl input: \is_sb_sh_sw
  found ctrl input: \instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \genblk1.pcpi_mul.active [1]
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1755$596_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1758$600_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3511
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1674$588_Y
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3517
  found state code: 8'00010000
  found state code: 8'00000001
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1516$555_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1526$563_Y
  found ctrl input: \decoder_trigger
  found ctrl input: \instr_jal
  found state code: 8'00100000
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1901$654_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1894$647_Y
  found ctrl input: $logic_and$./designs/picorv32a/src/picorv32a.v:1896$651_Y
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y
  found ctrl output: $procmux$1002_CMP
  found ctrl output: $procmux$1003_CMP
  found ctrl output: $procmux$1004_CMP
  found ctrl output: $procmux$1005_CMP
  found ctrl output: $procmux$1007_CMP
  found ctrl output: $procmux$1009_CMP
  ctrl inputs: { \genblk1.pcpi_mul.active [1] $auto$opt_reduce.cc:134:opt_pmux$3511 $auto$opt_reduce.cc:134:opt_pmux$3517 $logic_and$./designs/picorv32a/src/picorv32a.v:1909$662_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1901$654_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1896$651_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1894$647_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1893$644_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1850$633_Y $logic_or$./designs/picorv32a/src/picorv32a.v:1835$629_Y $eq$./designs/picorv32a/src/picorv32a.v:1809$611_Y $auto$opt_reduce.cc:134:opt_pmux$3533 $logic_and$./designs/picorv32a/src/picorv32a.v:1758$600_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1755$596_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1674$588_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1526$563_Y $logic_and$./designs/picorv32a/src/picorv32a.v:1516$555_Y \alu_wait \is_beq_bne_blt_bge_bltu_bgeu \is_sb_sh_sw \decoder_trigger \instr_trap \instr_jal \mem_done \resetn }
  ctrl outputs: { $procmux$1009_CMP $procmux$1007_CMP $procmux$1005_CMP $procmux$1004_CMP $procmux$1003_CMP $procmux$1002_CMP $0\cpu_state[7:0] $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y }
  transition: 8'10000000 25'---0---0----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---0---0----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---00-01----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---00-01----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---00011----------------- -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---00111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---00111----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---010-1----------------- -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---01101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---01101----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---01111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---01111----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---1-0------------------- -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---1-1-0----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---1-1-0----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---10101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---10101----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---10111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---10111----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---11101----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---11101----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'10000000 25'---11111----------------0 -> 8'01000000 16'1000000100000000
  transition: 8'10000000 25'---11111----------------1 -> 8'10000000 16'1000001000000000
  transition: 8'01000000 25'---0---0----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---0---0-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---0---0--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---00-01-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00-01--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00011----------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---00111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---00111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---00111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---010-1----------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---01101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---01101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---01111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---01111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-0------------------- -> 8'10000000 16'0000001000000001
  transition: 8'01000000 25'---1-1-0----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---1-1-0-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---1-1-0--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---10101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---10111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---10111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---11101-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11101--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111----------------0 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------00---0---1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------00---1-0-1 -> 8'00100000 16'0000000010000001
  transition: 8'01000000 25'---11111-------00---1-1-1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111-------10-------1 -> 8'01000000 16'0000000100000001
  transition: 8'01000000 25'---11111--------1-------1 -> 8'01000000 16'0000000100000001
  transition: 8'00100000 25'---0---0----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-000---0------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--10---0----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---0---0------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-0---0----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---00-01----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0000-01------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--100-01----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---00-01------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-00-01----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---00011----------------- -> 8'10000000 16'0100001000000000
  transition: 8'00100000 25'---00111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0000111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--100111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---00111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-00111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---010-1----------------- -> 8'10000000 16'0100001000000000
  transition: 8'00100000 25'---01101----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0001101------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--101101----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---01101------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-01101----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---01111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0001111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--101111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---01111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-01111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---1-0------------------- -> 8'10000000 16'0100001000000000
  transition: 8'00100000 25'---1-1-0----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-001-1-0------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--11-1-0----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---1-1-0------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-1-1-0----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---10101----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0010101------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--110101----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---10101------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-10101----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---10111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0010111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--110111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---10111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-10111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---11101----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0011101------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--111101----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---11101------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-11101----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00100000 25'---11111----------------0 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'-0011111------0---------1 -> 8'00010000 16'0100000001000000
  transition: 8'00100000 25'--111111----------------1 -> 8'01000000 16'0100000100000000
  transition: 8'00100000 25'---11111------1---------1 -> 8'00000001 16'0100000000000100
  transition: 8'00100000 25'-1-11111----------------1 -> 8'00001000 16'0100000000100000
  transition: 8'00010000 25'---0---0----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---0---0-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--0---0-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--0---0----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--0---0----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--0---0-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---0---0-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---00-01----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00-01-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--00-01-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--00-01----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--00-01----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--00-01-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00-01-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---00011----------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---00111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--00111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--00111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--00111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--00111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---00111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---010-1----------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---01101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--01101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--01101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--01101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--01101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---01111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--01111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--01111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--01111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--01111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---01111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---1-0------------------- -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'---1-1-0----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---1-1-0-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--1-1-0-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--1-1-0----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--1-1-0----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--1-1-0-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---1-1-0-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---10101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--10101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--10101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--10101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--10101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---10111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--10111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--10111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--10111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--10111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---10111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---11101----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11101-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--11101-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--11101----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--11101----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--11101-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11101-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00010000 25'---11111----------------0 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11111-----------0-0--1 -> 8'00001000 16'0000000000100010
  transition: 8'00010000 25'0--11111-----0-------1--1 -> 8'00010000 16'0000000001000010
  transition: 8'00010000 25'0--11111----01-------1--1 -> 8'10000000 16'0000001000000010
  transition: 8'00010000 25'0--11111----11-------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'1--11111-------------1--1 -> 8'01000000 16'0000000100000010
  transition: 8'00010000 25'---11111-----------1----1 -> 8'00000010 16'0000000000001010
  transition: 8'00001000 25'---0---0----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---0---0---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---0---0---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---0---0---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---0---0---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00-01----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00-01---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00-01---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00-01---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00-01---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00011----------------- -> 8'10000000 16'0010001000000000
  transition: 8'00001000 25'---00111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---00111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---00111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---010-1----------------- -> 8'10000000 16'0010001000000000
  transition: 8'00001000 25'---01101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01101---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01101---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---01101---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01101---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---01111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---01111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---01111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---1-0------------------- -> 8'10000000 16'0010001000000000
  transition: 8'00001000 25'---1-1-0----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---1-1-0---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---1-1-0---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---1-1-0---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---1-1-0---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10101---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10101---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10101---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10101---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---10111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---10111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11101----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11101---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11101---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11101---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11101---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11111----------------0 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11111---------00-----1 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11111---------01----01 -> 8'00001000 16'0010000000100000
  transition: 8'00001000 25'---11111---------01----11 -> 8'01000000 16'0010000100000000
  transition: 8'00001000 25'---11111---------1------1 -> 8'00001000 16'0010000000100000
  transition: 8'00000010 25'---0---0----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---0---0-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0---001--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0---011--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---00-01----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---00-01-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---00-0101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---00-0111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---00011----------------- -> 8'10000000 16'0000101000000000
  transition: 8'00000010 25'---00111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---00111-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0011101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0011111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---010-1----------------- -> 8'10000000 16'0000101000000000
  transition: 8'00000010 25'---01101----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---01101-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0110101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0110111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---01111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---01111-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0111101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---0111111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---1-0------------------- -> 8'10000000 16'0000101000000000
  transition: 8'00000010 25'---1-1-0----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---1-1-0-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1-1-001--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1-1-011--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---10101----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---10101-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1010101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1010111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---10111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---10111-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1011101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1011111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---11101----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---11101-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1110101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1110111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---11111----------------0 -> 8'01000000 16'0000100100000000
  transition: 8'00000010 25'---11111-0--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1111101--------------1 -> 8'00000010 16'0000100000001000
  transition: 8'00000010 25'---1111111--------------1 -> 8'01000000 16'0000100100000000
  transition: 8'00000001 25'---0---0----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---0---0-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0---001--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0---011--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00-01----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00-01-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---00-0101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---00-0111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00011----------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---00111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---00111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0011101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0011111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---010-1----------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---01101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0110101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0110111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---01111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0111101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---0111111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---1-0------------------- -> 8'10000000 16'0000011000000000
  transition: 8'00000001 25'---1-1-0----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---1-1-0-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1-1-001--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1-1-011--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1010101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1010111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---10111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1011101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1011111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11101----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11101-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1110101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1110111--------------1 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11111----------------0 -> 8'01000000 16'0000010100000000
  transition: 8'00000001 25'---11111-0--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1111101--------------1 -> 8'00000001 16'0000010000000100
  transition: 8'00000001 25'---1111111--------------1 -> 8'01000000 16'0000010100000000
Extracting FSM `\mem_wordsize' from module `\picorv32a'.
  found $dff cell for state register: $procdff$3349
  root of input selection tree: $0\mem_wordsize[1:0]
  found ctrl input: \resetn
  found ctrl input: $procmux$1002_CMP
  found ctrl input: $procmux$1003_CMP
  found ctrl input: $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$629_Y
  found ctrl input: \mem_do_rdata
  found ctrl input: \instr_lw
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1865$638_Y
  found ctrl input: $logic_or$./designs/picorv32a/src/picorv32a.v:1864$637_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \mem_do_wdata
  found ctrl input: \instr_sw
  found ctrl input: \instr_sh
  found ctrl input: \instr_sb
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1894$645_Y
  found ctrl output: $eq$./designs/picorv32a/src/picorv32a.v:1901$652_Y
  found ctrl output: $procmux$3222_CMP
  ctrl inputs: { $procmux$1003_CMP $procmux$1002_CMP $logic_or$./designs/picorv32a/src/picorv32a.v:1865$638_Y $logic_or$./designs/picorv32a/src/picorv32a.v:1864$637_Y $logic_or$./designs/picorv32a/src/picorv32a.v:1835$629_Y $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y \instr_sw \instr_sh \instr_sb \instr_lw \mem_do_wdata \mem_do_rdata \resetn }
  ctrl outputs: { $procmux$3222_CMP $eq$./designs/picorv32a/src/picorv32a.v:1901$652_Y $eq$./designs/picorv32a/src/picorv32a.v:1894$645_Y $0\mem_wordsize[1:0] }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'00---0------1 ->       2'00 5'00100
  transition:       2'00 13'-----1------1 ->       2'00 5'00100
  transition:       2'00 13'1---0-------1 ->       2'00 5'00100
  transition:       2'00 13'1---1-000-0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1---1-0-1 ->       2'10 5'00110
  transition:       2'00 13'1---1--1--0-1 ->       2'01 5'00101
  transition:       2'00 13'1---1-1---0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1-----1-1 ->       2'00 5'00100
  transition:       2'00 13'-1--0-------1 ->       2'00 5'00100
  transition:       2'00 13'-1001----0-01 ->       2'00 5'00100
  transition:       2'00 13'-1-11------01 ->       2'10 5'00110
  transition:       2'00 13'-11-1------01 ->       2'01 5'00101
  transition:       2'00 13'-1--1----1-01 ->       2'00 5'00100
  transition:       2'00 13'-1--1------11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10010
  transition:       2'10 13'00---0------1 ->       2'10 5'10010
  transition:       2'10 13'-----1------1 ->       2'00 5'10000
  transition:       2'10 13'1---0-------1 ->       2'10 5'10010
  transition:       2'10 13'1---1-000-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1---1-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1--1--0-1 ->       2'01 5'10001
  transition:       2'10 13'1---1-1---0-1 ->       2'00 5'10000
  transition:       2'10 13'1---1-----1-1 ->       2'10 5'10010
  transition:       2'10 13'-1--0-------1 ->       2'10 5'10010
  transition:       2'10 13'-1001----0-01 ->       2'10 5'10010
  transition:       2'10 13'-1-11------01 ->       2'10 5'10010
  transition:       2'10 13'-11-1------01 ->       2'01 5'10001
  transition:       2'10 13'-1--1----1-01 ->       2'00 5'10000
  transition:       2'10 13'-1--1------11 ->       2'10 5'10010
  transition:       2'01 13'------------0 ->       2'01 5'01001
  transition:       2'01 13'00---0------1 ->       2'01 5'01001
  transition:       2'01 13'-----1------1 ->       2'00 5'01000
  transition:       2'01 13'1---0-------1 ->       2'01 5'01001
  transition:       2'01 13'1---1-000-0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1---1-0-1 ->       2'10 5'01010
  transition:       2'01 13'1---1--1--0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1-1---0-1 ->       2'00 5'01000
  transition:       2'01 13'1---1-----1-1 ->       2'01 5'01001
  transition:       2'01 13'-1--0-------1 ->       2'01 5'01001
  transition:       2'01 13'-1001----0-01 ->       2'01 5'01001
  transition:       2'01 13'-1-11------01 ->       2'10 5'01010
  transition:       2'01 13'-11-1------01 ->       2'01 5'01001
  transition:       2'01 13'-1--1----1-01 ->       2'00 5'01000
  transition:       2'01 13'-1--1------11 ->       2'01 5'01001

25.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mem_wordsize$3550' from module `\picorv32a'.
Optimizing FSM `$fsm$\cpu_state$3540' from module `\picorv32a'.
  Merging pattern 25'---10101----------------1 and 25'---10111----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---01101----------------1 and 25'---01111----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---11101----------------1 and 25'---11111----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---10111----------------1 and 25'---10101----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---01111----------------1 and 25'---01101----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---11111----------------1 and 25'---11101----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---101-1----------------1 and 25'---111-1----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---111-1----------------1 and 25'---101-1----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---1-1-0----------------1 and 25'---1-1-1----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---1-1-1----------------1 and 25'---1-1-0----------------1 from group (0 0 16'1000001000000000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (0 1 16'1000000100000000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---1-1-1 and 25'---10111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------00---1-1-1 and 25'---01111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------00---1-1-1 and 25'---11111-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------00---1-1-1 and 25'---10101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------00---1-1-1 and 25'---01101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------00---1-1-1 and 25'---11101-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---0---1 and 25'---10111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------00---0---1 and 25'---01111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------00---0---1 and 25'---11111-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------00---0---1 and 25'---10101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------00---0---1 and 25'---01101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------00---0---1 and 25'---11101-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------10-------1 and 25'---10111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101-------10-------1 and 25'---01111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101-------10-------1 and 25'---11111-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111-------10-------1 and 25'---10101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111-------10-------1 and 25'---01101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111-------10-------1 and 25'---11101-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101--------1-------1 and 25'---10111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01101--------1-------1 and 25'---01111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11101--------1-------1 and 25'---11111--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10111--------1-------1 and 25'---10101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---01111--------1-------1 and 25'---01101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---11111--------1-------1 and 25'---11101--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------00---1-1-1 and 25'---111-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------00---1-1-1 and 25'---101-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------00---0---1 and 25'---111-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------00---0---1 and 25'---101-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1-------10-------1 and 25'---111-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1-------10-------1 and 25'---101-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---101-1--------1-------1 and 25'---111-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---111-1--------1-------1 and 25'---101-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------00---1-1-1 and 25'---1-1-1-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------00---1-1-1 and 25'---1-1-0-------00---1-1-1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------00---0---1 and 25'---1-1-1-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------00---0---1 and 25'---1-1-0-------00---0---1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0-------10-------1 and 25'---1-1-1-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1-------10-------1 and 25'---1-1-0-------10-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-0--------1-------1 and 25'---1-1-1--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---1-1-1--------1-------1 and 25'---1-1-0--------1-------1 from group (1 1 16'0000000100000001).
  Merging pattern 25'---10101-------00---1-0-1 and 25'---10111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---01101-------00---1-0-1 and 25'---01111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---11101-------00---1-0-1 and 25'---11111-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---10111-------00---1-0-1 and 25'---10101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---01111-------00---1-0-1 and 25'---01101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---11111-------00---1-0-1 and 25'---11101-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---101-1-------00---1-0-1 and 25'---111-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---111-1-------00---1-0-1 and 25'---101-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---1-1-0-------00---1-0-1 and 25'---1-1-1-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---1-1-1-------00---1-0-1 and 25'---1-1-0-------00---1-0-1 from group (1 2 16'0000000010000001).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'--110101----------------1 and 25'--110111----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'--101101----------------1 and 25'--101111----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'--111101----------------1 and 25'--111111----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'--110111----------------1 and 25'--110101----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'--101111----------------1 and 25'--101101----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'--111111----------------1 and 25'--111101----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'--1101-1----------------1 and 25'--1111-1----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'--1111-1----------------1 and 25'--1101-1----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (2 1 16'0100000100000000).
  Merging pattern 25'--11-1-0----------------1 and 25'--11-1-1----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'--11-1-1----------------1 and 25'--11-1-0----------------1 from group (2 1 16'0100000100000000).
  Merging pattern 25'-0010101------0---------1 and 25'-0010111------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-0001101------0---------1 and 25'-0001111------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-0011101------0---------1 and 25'-0011111------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-0010111------0---------1 and 25'-0010101------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-0001111------0---------1 and 25'-0001101------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-0011111------0---------1 and 25'-0011101------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-00101-1------0---------1 and 25'-00111-1------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-00111-1------0---------1 and 25'-00101-1------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-001-1-0------0---------1 and 25'-001-1-1------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-001-1-1------0---------1 and 25'-001-1-0------0---------1 from group (2 3 16'0100000001000000).
  Merging pattern 25'-1-10101----------------1 and 25'-1-10111----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-01101----------------1 and 25'-1-01111----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-11101----------------1 and 25'-1-11111----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-10111----------------1 and 25'-1-10101----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-01111----------------1 and 25'-1-01101----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-11111----------------1 and 25'-1-11101----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-101-1----------------1 and 25'-1-111-1----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-111-1----------------1 and 25'-1-101-1----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-1-1-0----------------1 and 25'-1-1-1-1----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'-1-1-1-1----------------1 and 25'-1-1-1-0----------------1 from group (2 4 16'0100000000100000).
  Merging pattern 25'---10101------1---------1 and 25'---10111------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---01101------1---------1 and 25'---01111------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---11101------1---------1 and 25'---11111------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---10111------1---------1 and 25'---10101------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---01111------1---------1 and 25'---01101------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---11111------1---------1 and 25'---11101------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---101-1------1---------1 and 25'---111-1------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---111-1------1---------1 and 25'---101-1------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---1-1-0------1---------1 and 25'---1-1-1------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'---1-1-1------1---------1 and 25'---1-1-0------1---------1 from group (2 6 16'0100000000000100).
  Merging pattern 25'0--10101----01-------1--1 and 25'0--10111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--01101----01-------1--1 and 25'0--01111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--11101----01-------1--1 and 25'0--11111----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--10111----01-------1--1 and 25'0--10101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--01111----01-------1--1 and 25'0--01101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--11111----01-------1--1 and 25'0--11101----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--101-1----01-------1--1 and 25'0--111-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--111-1----01-------1--1 and 25'0--101-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--1-1-0----01-------1--1 and 25'0--1-1-1----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'0--1-1-1----01-------1--1 and 25'0--1-1-0----01-------1--1 from group (3 0 16'0000001000000010).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--10101----11-------1--1 and 25'0--10111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--01101----11-------1--1 and 25'0--01111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--11101----11-------1--1 and 25'0--11111----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--10111----11-------1--1 and 25'0--10101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--01111----11-------1--1 and 25'0--01101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--11111----11-------1--1 and 25'0--11101----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--10101-------------1--1 and 25'1--10111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--01101-------------1--1 and 25'1--01111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--11101-------------1--1 and 25'1--11111-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--10111-------------1--1 and 25'1--10101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--01111-------------1--1 and 25'1--01101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--11111-------------1--1 and 25'1--11101-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--101-1----11-------1--1 and 25'0--111-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--111-1----11-------1--1 and 25'0--101-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--101-1-------------1--1 and 25'1--111-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--111-1-------------1--1 and 25'1--101-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--1-1-0----11-------1--1 and 25'0--1-1-1----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--1-1-1----11-------1--1 and 25'0--1-1-0----11-------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--1-1-0-------------1--1 and 25'1--1-1-1-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'1--1-1-1-------------1--1 and 25'1--1-1-0-------------1--1 from group (3 1 16'0000000100000010).
  Merging pattern 25'0--10101-----0-------1--1 and 25'0--10111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--01101-----0-------1--1 and 25'0--01111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--11101-----0-------1--1 and 25'0--11111-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--10111-----0-------1--1 and 25'0--10101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--01111-----0-------1--1 and 25'0--01101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--11111-----0-------1--1 and 25'0--11101-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--101-1-----0-------1--1 and 25'0--111-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--111-1-----0-------1--1 and 25'0--101-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--1-1-0-----0-------1--1 and 25'0--1-1-1-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'0--1-1-1-----0-------1--1 and 25'0--1-1-0-----0-------1--1 from group (3 3 16'0000000001000010).
  Merging pattern 25'---10101-----------0-0--1 and 25'---10111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---01101-----------0-0--1 and 25'---01111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---11101-----------0-0--1 and 25'---11111-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---10111-----------0-0--1 and 25'---10101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---01111-----------0-0--1 and 25'---01101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---11111-----------0-0--1 and 25'---11101-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---101-1-----------0-0--1 and 25'---111-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---111-1-----------0-0--1 and 25'---101-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---1-1-0-----------0-0--1 and 25'---1-1-1-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---1-1-1-----------0-0--1 and 25'---1-1-0-----------0-0--1 from group (3 4 16'0000000000100010).
  Merging pattern 25'---10101-----------1----1 and 25'---10111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---01101-----------1----1 and 25'---01111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---11101-----------1----1 and 25'---11111-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---10111-----------1----1 and 25'---10101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---01111-----------1----1 and 25'---01101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---11111-----------1----1 and 25'---11101-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---101-1-----------1----1 and 25'---111-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---111-1-----------1----1 and 25'---101-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---1-1-0-----------1----1 and 25'---1-1-1-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---1-1-1-----------1----1 and 25'---1-1-0-----------1----1 from group (3 5 16'0000000000001010).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10101---------01----11 and 25'---10111---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01101---------01----11 and 25'---01111---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11101---------01----11 and 25'---11111---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10111---------01----11 and 25'---10101---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01111---------01----11 and 25'---01101---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11111---------01----11 and 25'---11101---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10101---------00-----1 and 25'---10111---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01101---------00-----1 and 25'---01111---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11101---------00-----1 and 25'---11111---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10111---------00-----1 and 25'---10101---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---01111---------00-----1 and 25'---01101---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---11111---------00-----1 and 25'---11101---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---101-1---------01----11 and 25'---111-1---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---111-1---------01----11 and 25'---101-1---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---101-1---------00-----1 and 25'---111-1---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---111-1---------00-----1 and 25'---101-1---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-0---------01----11 and 25'---1-1-1---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-1---------01----11 and 25'---1-1-0---------01----11 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-0---------00-----1 and 25'---1-1-1---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---1-1-1---------00-----1 and 25'---1-1-0---------00-----1 from group (4 1 16'0010000100000000).
  Merging pattern 25'---10101---------01----01 and 25'---10111---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01101---------01----01 and 25'---01111---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11101---------01----01 and 25'---11111---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10111---------01----01 and 25'---10101---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01111---------01----01 and 25'---01101---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11111---------01----01 and 25'---11101---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10101---------1------1 and 25'---10111---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01101---------1------1 and 25'---01111---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11101---------1------1 and 25'---11111---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10111---------1------1 and 25'---10101---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---01111---------1------1 and 25'---01101---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---11111---------1------1 and 25'---11101---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---101-1---------01----01 and 25'---111-1---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---111-1---------01----01 and 25'---101-1---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---101-1---------1------1 and 25'---111-1---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---111-1---------1------1 and 25'---101-1---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-0---------01----01 and 25'---1-1-1---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-1---------01----01 and 25'---1-1-0---------01----01 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-0---------1------1 and 25'---1-1-1---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---1-1-1---------1------1 and 25'---1-1-0---------1------1 from group (4 4 16'0010000000100000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1010111--------------1 and 25'---1011111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---0110111--------------1 and 25'---0111111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1110111--------------1 and 25'---1111111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1011111--------------1 and 25'---1010111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---0111111--------------1 and 25'---0110111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1111111--------------1 and 25'---1110111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---101-111--------------1 and 25'---111-111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---111-111--------------1 and 25'---101-111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1-1-011--------------1 and 25'---1-1-111--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---1-1-111--------------1 and 25'---1-1-011--------------1 from group (5 1 16'0000100100000000).
  Merging pattern 25'---10101-0--------------1 and 25'---10111-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---01101-0--------------1 and 25'---01111-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---11101-0--------------1 and 25'---11111-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---10111-0--------------1 and 25'---10101-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---01111-0--------------1 and 25'---01101-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---11111-0--------------1 and 25'---11101-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1010101--------------1 and 25'---1011101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---0110101--------------1 and 25'---0111101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1110101--------------1 and 25'---1111101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1011101--------------1 and 25'---1010101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---0111101--------------1 and 25'---0110101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1111101--------------1 and 25'---1110101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---101-1-0--------------1 and 25'---111-1-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---111-1-0--------------1 and 25'---101-1-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---101-101--------------1 and 25'---111-101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---111-101--------------1 and 25'---101-101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1-1-0-0--------------1 and 25'---1-1-1-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1-1-1-0--------------1 and 25'---1-1-0-0--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1-1-001--------------1 and 25'---1-1-101--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---1-1-101--------------1 and 25'---1-1-001--------------1 from group (5 5 16'0000100000001000).
  Merging pattern 25'---10101----------------0 and 25'---10111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---01101----------------0 and 25'---01111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---11101----------------0 and 25'---11111----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---10111----------------0 and 25'---10101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---01111----------------0 and 25'---01101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---11111----------------0 and 25'---11101----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1010111--------------1 and 25'---1011111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---0110111--------------1 and 25'---0111111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1110111--------------1 and 25'---1111111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1011111--------------1 and 25'---1010111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---0111111--------------1 and 25'---0110111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1111111--------------1 and 25'---1110111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---101-1----------------0 and 25'---111-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---111-1----------------0 and 25'---101-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---101-111--------------1 and 25'---111-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---111-111--------------1 and 25'---101-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-0----------------0 and 25'---1-1-1----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-1----------------0 and 25'---1-1-0----------------0 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-011--------------1 and 25'---1-1-111--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---1-1-111--------------1 and 25'---1-1-011--------------1 from group (6 1 16'0000010100000000).
  Merging pattern 25'---10101-0--------------1 and 25'---10111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---01101-0--------------1 and 25'---01111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---11101-0--------------1 and 25'---11111-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---10111-0--------------1 and 25'---10101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---01111-0--------------1 and 25'---01101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---11111-0--------------1 and 25'---11101-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1010101--------------1 and 25'---1011101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---0110101--------------1 and 25'---0111101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1110101--------------1 and 25'---1111101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1011101--------------1 and 25'---1010101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---0111101--------------1 and 25'---0110101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1111101--------------1 and 25'---1110101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---101-1-0--------------1 and 25'---111-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---111-1-0--------------1 and 25'---101-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---101-101--------------1 and 25'---111-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---111-101--------------1 and 25'---101-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-0-0--------------1 and 25'---1-1-1-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-1-0--------------1 and 25'---1-1-0-0--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-001--------------1 and 25'---1-1-101--------------1 from group (6 6 16'0000010000000100).
  Merging pattern 25'---1-1-101--------------1 and 25'---1-1-001--------------1 from group (6 6 16'0000010000000100).
  Removing unused input signal $eq$./designs/picorv32a/src/picorv32a.v:1809$611_Y.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$3533.

25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 45 unused cells and 45 unused wires.
<suppressed ~46 debug messages>

25.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cpu_state$3540' from module `\picorv32a'.
  Removing unused output signal $0\cpu_state[7:0] [0].
  Removing unused output signal $0\cpu_state[7:0] [1].
  Removing unused output signal $0\cpu_state[7:0] [2].
  Removing unused output signal $0\cpu_state[7:0] [3].
  Removing unused output signal $0\cpu_state[7:0] [4].
  Removing unused output signal $0\cpu_state[7:0] [5].
  Removing unused output signal $0\cpu_state[7:0] [6].
  Removing unused output signal $0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\mem_wordsize$3550' from module `\picorv32a'.
  Removing unused output signal $0\mem_wordsize[1:0] [0].
  Removing unused output signal $0\mem_wordsize[1:0] [1].

25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cpu_state$3540' from module `\picorv32a' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00010000 -> ---1---
  00001000 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\mem_wordsize$3550' from module `\picorv32a' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cpu_state$3540' from module `picorv32a':
-------------------------------------

  Information on FSM $fsm$\cpu_state$3540 (\cpu_state):

  Number of input signals:   23
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \resetn
    1: \mem_done
    2: \instr_jal
    3: \instr_trap
    4: \decoder_trigger
    5: \is_sb_sh_sw
    6: \is_beq_bne_blt_bge_bltu_bgeu
    7: \alu_wait
    8: $logic_and$./designs/picorv32a/src/picorv32a.v:1516$555_Y
    9: $logic_and$./designs/picorv32a/src/picorv32a.v:1526$563_Y
   10: $logic_and$./designs/picorv32a/src/picorv32a.v:1674$588_Y
   11: $logic_and$./designs/picorv32a/src/picorv32a.v:1755$596_Y
   12: $logic_and$./designs/picorv32a/src/picorv32a.v:1758$600_Y
   13: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$629_Y
   14: $logic_and$./designs/picorv32a/src/picorv32a.v:1850$633_Y
   15: $logic_and$./designs/picorv32a/src/picorv32a.v:1893$644_Y
   16: $logic_and$./designs/picorv32a/src/picorv32a.v:1894$647_Y
   17: $logic_and$./designs/picorv32a/src/picorv32a.v:1896$651_Y
   18: $logic_and$./designs/picorv32a/src/picorv32a.v:1901$654_Y
   19: $logic_and$./designs/picorv32a/src/picorv32a.v:1909$662_Y
   20: $auto$opt_reduce.cc:134:opt_pmux$3517
   21: $auto$opt_reduce.cc:134:opt_pmux$3511
   22: \genblk1.pcpi_mul.active [1]

  Output signals:
    0: $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y
    1: $eq$./designs/picorv32a/src/picorv32a.v:1331$491_Y
    2: $procmux$1002_CMP
    3: $procmux$1003_CMP
    4: $procmux$1004_CMP
    5: $procmux$1005_CMP
    6: $procmux$1007_CMP
    7: $procmux$1009_CMP

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 23'---0---0--------------1   ->     0 8'10000000
      1:     0 23'---00-01--------------1   ->     0 8'10000000
      2:     0 23'---00111--------------1   ->     0 8'10000000
      3:     0 23'---011-1--------------1   ->     0 8'10000000
      4:     0 23'---1-1----------------1   ->     0 8'10000000
      5:     0 23'---00011---------------   ->     0 8'10000000
      6:     0 23'---010-1---------------   ->     0 8'10000000
      7:     0 23'---1-0-----------------   ->     0 8'10000000
      8:     0 23'---0---0--------------0   ->     1 8'10000000
      9:     0 23'---00-01--------------0   ->     1 8'10000000
     10:     0 23'---00111--------------0   ->     1 8'10000000
     11:     0 23'---011-1--------------0   ->     1 8'10000000
     12:     0 23'---1-1----------------0   ->     1 8'10000000
     13:     1 23'---00011---------------   ->     0 8'00000001
     14:     1 23'---010-1---------------   ->     0 8'00000001
     15:     1 23'---1-0-----------------   ->     0 8'00000001
     16:     1 23'---0---0--------------0   ->     1 8'00000001
     17:     1 23'---00-01--------------0   ->     1 8'00000001
     18:     1 23'---00111--------------0   ->     1 8'00000001
     19:     1 23'---011-1--------------0   ->     1 8'00000001
     20:     1 23'---1-1----------------0   ->     1 8'00000001
     21:     1 23'---0---0-----00---1-1-1   ->     1 8'00000001
     22:     1 23'---00-01-----00---1-1-1   ->     1 8'00000001
     23:     1 23'---00111-----00---1-1-1   ->     1 8'00000001
     24:     1 23'---011-1-----00---1-1-1   ->     1 8'00000001
     25:     1 23'---1-1-------00---1-1-1   ->     1 8'00000001
     26:     1 23'---0---0-----00---0---1   ->     1 8'00000001
     27:     1 23'---00-01-----00---0---1   ->     1 8'00000001
     28:     1 23'---00111-----00---0---1   ->     1 8'00000001
     29:     1 23'---011-1-----00---0---1   ->     1 8'00000001
     30:     1 23'---1-1-------00---0---1   ->     1 8'00000001
     31:     1 23'---0---0-----10-------1   ->     1 8'00000001
     32:     1 23'---00-01-----10-------1   ->     1 8'00000001
     33:     1 23'---00111-----10-------1   ->     1 8'00000001
     34:     1 23'---011-1-----10-------1   ->     1 8'00000001
     35:     1 23'---1-1-------10-------1   ->     1 8'00000001
     36:     1 23'---0---0------1-------1   ->     1 8'00000001
     37:     1 23'---00-01------1-------1   ->     1 8'00000001
     38:     1 23'---00111------1-------1   ->     1 8'00000001
     39:     1 23'---011-1------1-------1   ->     1 8'00000001
     40:     1 23'---1-1--------1-------1   ->     1 8'00000001
     41:     1 23'---0---0-----00---1-0-1   ->     2 8'00000001
     42:     1 23'---00-01-----00---1-0-1   ->     2 8'00000001
     43:     1 23'---00111-----00---1-0-1   ->     2 8'00000001
     44:     1 23'---011-1-----00---1-0-1   ->     2 8'00000001
     45:     1 23'---1-1-------00---1-0-1   ->     2 8'00000001
     46:     2 23'---00011---------------   ->     0 8'01000000
     47:     2 23'---010-1---------------   ->     0 8'01000000
     48:     2 23'---1-0-----------------   ->     0 8'01000000
     49:     2 23'---0---0--------------0   ->     1 8'01000000
     50:     2 23'---00-01--------------0   ->     1 8'01000000
     51:     2 23'---00111--------------0   ->     1 8'01000000
     52:     2 23'---011-1--------------0   ->     1 8'01000000
     53:     2 23'---1-1----------------0   ->     1 8'01000000
     54:     2 23'--10---0--------------1   ->     1 8'01000000
     55:     2 23'--100-01--------------1   ->     1 8'01000000
     56:     2 23'--100111--------------1   ->     1 8'01000000
     57:     2 23'--1011-1--------------1   ->     1 8'01000000
     58:     2 23'--11-1----------------1   ->     1 8'01000000
     59:     2 23'-000---0----0---------1   ->     3 8'01000000
     60:     2 23'-0000-01----0---------1   ->     3 8'01000000
     61:     2 23'-0000111----0---------1   ->     3 8'01000000
     62:     2 23'-00011-1----0---------1   ->     3 8'01000000
     63:     2 23'-001-1------0---------1   ->     3 8'01000000
     64:     2 23'-1-0---0--------------1   ->     4 8'01000000
     65:     2 23'-1-00-01--------------1   ->     4 8'01000000
     66:     2 23'-1-00111--------------1   ->     4 8'01000000
     67:     2 23'-1-011-1--------------1   ->     4 8'01000000
     68:     2 23'-1-1-1----------------1   ->     4 8'01000000
     69:     2 23'---0---0----1---------1   ->     6 8'01000000
     70:     2 23'---00-01----1---------1   ->     6 8'01000000
     71:     2 23'---00111----1---------1   ->     6 8'01000000
     72:     2 23'---011-1----1---------1   ->     6 8'01000000
     73:     2 23'---1-1------1---------1   ->     6 8'01000000
     74:     3 23'0--0---0--01-------1--1   ->     0 8'00000010
     75:     3 23'0--00-01--01-------1--1   ->     0 8'00000010
     76:     3 23'0--00111--01-------1--1   ->     0 8'00000010
     77:     3 23'0--011-1--01-------1--1   ->     0 8'00000010
     78:     3 23'0--1-1----01-------1--1   ->     0 8'00000010
     79:     3 23'---00011---------------   ->     0 8'00000010
     80:     3 23'---010-1---------------   ->     0 8'00000010
     81:     3 23'---1-0-----------------   ->     0 8'00000010
     82:     3 23'---0---0--------------0   ->     1 8'00000010
     83:     3 23'---00-01--------------0   ->     1 8'00000010
     84:     3 23'---00111--------------0   ->     1 8'00000010
     85:     3 23'---011-1--------------0   ->     1 8'00000010
     86:     3 23'---1-1----------------0   ->     1 8'00000010
     87:     3 23'0--0---0--11-------1--1   ->     1 8'00000010
     88:     3 23'0--00-01--11-------1--1   ->     1 8'00000010
     89:     3 23'0--00111--11-------1--1   ->     1 8'00000010
     90:     3 23'0--011-1--11-------1--1   ->     1 8'00000010
     91:     3 23'0--1-1----11-------1--1   ->     1 8'00000010
     92:     3 23'1--0---0-----------1--1   ->     1 8'00000010
     93:     3 23'1--00-01-----------1--1   ->     1 8'00000010
     94:     3 23'1--00111-----------1--1   ->     1 8'00000010
     95:     3 23'1--011-1-----------1--1   ->     1 8'00000010
     96:     3 23'1--1-1-------------1--1   ->     1 8'00000010
     97:     3 23'0--0---0---0-------1--1   ->     3 8'00000010
     98:     3 23'0--00-01---0-------1--1   ->     3 8'00000010
     99:     3 23'0--00111---0-------1--1   ->     3 8'00000010
    100:     3 23'0--011-1---0-------1--1   ->     3 8'00000010
    101:     3 23'0--1-1-----0-------1--1   ->     3 8'00000010
    102:     3 23'---0---0---------0-0--1   ->     4 8'00000010
    103:     3 23'---00-01---------0-0--1   ->     4 8'00000010
    104:     3 23'---00111---------0-0--1   ->     4 8'00000010
    105:     3 23'---011-1---------0-0--1   ->     4 8'00000010
    106:     3 23'---1-1-----------0-0--1   ->     4 8'00000010
    107:     3 23'---0---0---------1----1   ->     5 8'00000010
    108:     3 23'---00-01---------1----1   ->     5 8'00000010
    109:     3 23'---00111---------1----1   ->     5 8'00000010
    110:     3 23'---011-1---------1----1   ->     5 8'00000010
    111:     3 23'---1-1-----------1----1   ->     5 8'00000010
    112:     4 23'---00011---------------   ->     0 8'00100000
    113:     4 23'---010-1---------------   ->     0 8'00100000
    114:     4 23'---1-0-----------------   ->     0 8'00100000
    115:     4 23'---0---0--------------0   ->     1 8'00100000
    116:     4 23'---00-01--------------0   ->     1 8'00100000
    117:     4 23'---00111--------------0   ->     1 8'00100000
    118:     4 23'---011-1--------------0   ->     1 8'00100000
    119:     4 23'---1-1----------------0   ->     1 8'00100000
    120:     4 23'---0---0-------01----11   ->     1 8'00100000
    121:     4 23'---00-01-------01----11   ->     1 8'00100000
    122:     4 23'---00111-------01----11   ->     1 8'00100000
    123:     4 23'---011-1-------01----11   ->     1 8'00100000
    124:     4 23'---1-1---------01----11   ->     1 8'00100000
    125:     4 23'---0---0-------00-----1   ->     1 8'00100000
    126:     4 23'---00-01-------00-----1   ->     1 8'00100000
    127:     4 23'---00111-------00-----1   ->     1 8'00100000
    128:     4 23'---011-1-------00-----1   ->     1 8'00100000
    129:     4 23'---1-1---------00-----1   ->     1 8'00100000
    130:     4 23'---0---0-------01----01   ->     4 8'00100000
    131:     4 23'---00-01-------01----01   ->     4 8'00100000
    132:     4 23'---00111-------01----01   ->     4 8'00100000
    133:     4 23'---011-1-------01----01   ->     4 8'00100000
    134:     4 23'---1-1---------01----01   ->     4 8'00100000
    135:     4 23'---0---0-------1------1   ->     4 8'00100000
    136:     4 23'---00-01-------1------1   ->     4 8'00100000
    137:     4 23'---00111-------1------1   ->     4 8'00100000
    138:     4 23'---011-1-------1------1   ->     4 8'00100000
    139:     4 23'---1-1---------1------1   ->     4 8'00100000
    140:     5 23'---00011---------------   ->     0 8'00001000
    141:     5 23'---010-1---------------   ->     0 8'00001000
    142:     5 23'---1-0-----------------   ->     0 8'00001000
    143:     5 23'---0---0--------------0   ->     1 8'00001000
    144:     5 23'---00-01--------------0   ->     1 8'00001000
    145:     5 23'---00111--------------0   ->     1 8'00001000
    146:     5 23'---011-1--------------0   ->     1 8'00001000
    147:     5 23'---1-1----------------0   ->     1 8'00001000
    148:     5 23'---0---011------------1   ->     1 8'00001000
    149:     5 23'---00-0111------------1   ->     1 8'00001000
    150:     5 23'---0011111------------1   ->     1 8'00001000
    151:     5 23'---011-111------------1   ->     1 8'00001000
    152:     5 23'---1-1--11------------1   ->     1 8'00001000
    153:     5 23'---0---0-0------------1   ->     5 8'00001000
    154:     5 23'---00-01-0------------1   ->     5 8'00001000
    155:     5 23'---00111-0------------1   ->     5 8'00001000
    156:     5 23'---011-1-0------------1   ->     5 8'00001000
    157:     5 23'---1-1---0------------1   ->     5 8'00001000
    158:     5 23'---0---001------------1   ->     5 8'00001000
    159:     5 23'---00-0101------------1   ->     5 8'00001000
    160:     5 23'---0011101------------1   ->     5 8'00001000
    161:     5 23'---011-101------------1   ->     5 8'00001000
    162:     5 23'---1-1--01------------1   ->     5 8'00001000
    163:     6 23'---00011---------------   ->     0 8'00000100
    164:     6 23'---010-1---------------   ->     0 8'00000100
    165:     6 23'---1-0-----------------   ->     0 8'00000100
    166:     6 23'---0---0--------------0   ->     1 8'00000100
    167:     6 23'---00-01--------------0   ->     1 8'00000100
    168:     6 23'---00111--------------0   ->     1 8'00000100
    169:     6 23'---011-1--------------0   ->     1 8'00000100
    170:     6 23'---1-1----------------0   ->     1 8'00000100
    171:     6 23'---0---011------------1   ->     1 8'00000100
    172:     6 23'---00-0111------------1   ->     1 8'00000100
    173:     6 23'---0011111------------1   ->     1 8'00000100
    174:     6 23'---011-111------------1   ->     1 8'00000100
    175:     6 23'---1-1--11------------1   ->     1 8'00000100
    176:     6 23'---0---0-0------------1   ->     6 8'00000100
    177:     6 23'---00-01-0------------1   ->     6 8'00000100
    178:     6 23'---00111-0------------1   ->     6 8'00000100
    179:     6 23'---011-1-0------------1   ->     6 8'00000100
    180:     6 23'---1-1---0------------1   ->     6 8'00000100
    181:     6 23'---0---001------------1   ->     6 8'00000100
    182:     6 23'---00-0101------------1   ->     6 8'00000100
    183:     6 23'---0011101------------1   ->     6 8'00000100
    184:     6 23'---011-101------------1   ->     6 8'00000100
    185:     6 23'---1-1--01------------1   ->     6 8'00000100

-------------------------------------

FSM `$fsm$\mem_wordsize$3550' from module `picorv32a':
-------------------------------------

  Information on FSM $fsm$\mem_wordsize$3550 (\mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: \mem_do_rdata
    2: \mem_do_wdata
    3: \instr_lw
    4: \instr_sb
    5: \instr_sh
    6: \instr_sw
    7: $eq$./designs/picorv32a/src/picorv32a.v:1291$470_Y
    8: $logic_or$./designs/picorv32a/src/picorv32a.v:1835$629_Y
    9: $logic_or$./designs/picorv32a/src/picorv32a.v:1864$637_Y
   10: $logic_or$./designs/picorv32a/src/picorv32a.v:1865$638_Y
   11: $procmux$1002_CMP
   12: $procmux$1003_CMP

  Output signals:
    0: $eq$./designs/picorv32a/src/picorv32a.v:1894$645_Y
    1: $eq$./designs/picorv32a/src/picorv32a.v:1901$652_Y
    2: $procmux$3222_CMP

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'001
      1:     0 13'-1001----0-01   ->     0 3'001
      2:     0 13'-1--1----1-01   ->     0 3'001
      3:     0 13'-1--1------11   ->     0 3'001
      4:     0 13'1---1-000-0-1   ->     0 3'001
      5:     0 13'1---1-1---0-1   ->     0 3'001
      6:     0 13'1---1-----1-1   ->     0 3'001
      7:     0 13'00---0------1   ->     0 3'001
      8:     0 13'-----1------1   ->     0 3'001
      9:     0 13'-1--0-------1   ->     0 3'001
     10:     0 13'1---0-------1   ->     0 3'001
     11:     0 13'-1-11------01   ->     1 3'001
     12:     0 13'1---1---1-0-1   ->     1 3'001
     13:     0 13'-11-1------01   ->     2 3'001
     14:     0 13'1---1--1--0-1   ->     2 3'001
     15:     1 13'-1--1----1-01   ->     0 3'100
     16:     1 13'1---1-1---0-1   ->     0 3'100
     17:     1 13'-----1------1   ->     0 3'100
     18:     1 13'------------0   ->     1 3'100
     19:     1 13'-1001----0-01   ->     1 3'100
     20:     1 13'-1-11------01   ->     1 3'100
     21:     1 13'-1--1------11   ->     1 3'100
     22:     1 13'1---1-000-0-1   ->     1 3'100
     23:     1 13'1---1---1-0-1   ->     1 3'100
     24:     1 13'1---1-----1-1   ->     1 3'100
     25:     1 13'00---0------1   ->     1 3'100
     26:     1 13'-1--0-------1   ->     1 3'100
     27:     1 13'1---0-------1   ->     1 3'100
     28:     1 13'-11-1------01   ->     2 3'100
     29:     1 13'1---1--1--0-1   ->     2 3'100
     30:     2 13'-1--1----1-01   ->     0 3'010
     31:     2 13'1---1-1---0-1   ->     0 3'010
     32:     2 13'-----1------1   ->     0 3'010
     33:     2 13'-1-11------01   ->     1 3'010
     34:     2 13'1---1---1-0-1   ->     1 3'010
     35:     2 13'------------0   ->     2 3'010
     36:     2 13'-1001----0-01   ->     2 3'010
     37:     2 13'-11-1------01   ->     2 3'010
     38:     2 13'-1--1------11   ->     2 3'010
     39:     2 13'1---1-000-0-1   ->     2 3'010
     40:     2 13'1---1--1--0-1   ->     2 3'010
     41:     2 13'1---1-----1-1   ->     2 3'010
     42:     2 13'00---0------1   ->     2 3'010
     43:     2 13'-1--0-------1   ->     2 3'010
     44:     2 13'1---0-------1   ->     2 3'010

-------------------------------------

25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cpu_state$3540' from module `\picorv32a'.
Mapping FSM `$fsm$\mem_wordsize$3550' from module `\picorv32a'.

26. Executing OPT pass (performing simple optimizations).

26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~5 debug messages>

26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/7 on $pmux $procmux$1221.
    dead port 1/2 on $mux $procmux$1224.
    dead port 2/2 on $mux $procmux$1224.
    dead port 1/2 on $mux $procmux$1272.
    dead port 2/2 on $mux $procmux$1272.
    dead port 1/2 on $mux $procmux$1275.
    dead port 2/2 on $mux $procmux$1275.
    dead port 1/3 on $pmux $procmux$1277.
    dead port 1/2 on $mux $procmux$1695.
    dead port 2/2 on $mux $procmux$1695.
    dead port 1/6 on $pmux $procmux$1697.
    dead port 3/5 on $pmux $procmux$1906.
    dead port 1/4 on $pmux $procmux$1916.
    dead port 2/4 on $pmux $procmux$1916.
    dead port 3/4 on $pmux $procmux$1916.
    dead port 4/4 on $pmux $procmux$1916.
    dead port 1/4 on $pmux $procmux$1922.
    dead port 2/4 on $pmux $procmux$1922.
    dead port 3/4 on $pmux $procmux$1922.
    dead port 4/4 on $pmux $procmux$1922.
    dead port 1/2 on $mux $procmux$1926.
    dead port 2/2 on $mux $procmux$1926.
    dead port 1/2 on $mux $procmux$1929.
    dead port 2/2 on $mux $procmux$1929.
Removed 24 multiplexer ports.
<suppressed ~162 debug messages>

26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3530: { \cpu_state [6:2] \cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3528: { \cpu_state [6:4] \cpu_state [2] \cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3506: { \cpu_state [6:5] \cpu_state [3:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3504: \cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3502: { \cpu_state [6] \cpu_state [4:0] }
  Optimizing cells in module \picorv32a.
Performed a total of 5 changes.

26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

26.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$3489 ($dff) from module picorv32a (D = \mem_rdata, Q = \mem_rdata_q).
Adding EN signal on $procdff$3478 ($dff) from module picorv32a (D = $0\mem_state[1:0], Q = \mem_state).
Adding EN signal on $procdff$3477 ($dff) from module picorv32a (D = $procmux$2950_Y, Q = \mem_wstrb).
Adding EN signal on $procdff$3476 ($dff) from module picorv32a (D = \mem_la_wdata, Q = \mem_wdata).
Adding EN signal on $procdff$3475 ($dff) from module picorv32a (D = \mem_la_addr, Q = \mem_addr).
Adding EN signal on $procdff$3474 ($dff) from module picorv32a (D = $procmux$2970_Y, Q = \mem_instr).
Adding SRST signal on $auto$ff.cc:266:slice$4236 ($dffe) from module picorv32a (D = $procmux$2968_Y, Q = \mem_instr, rval = 1'0).
Adding EN signal on $procdff$3473 ($dff) from module picorv32a (D = $0\mem_valid[0:0], Q = \mem_valid).
Adding SRST signal on $procdff$3457 ($dff) from module picorv32a (D = $reduce_or$./designs/picorv32a/src/picorv32a.v:845$175_Y, Q = \is_compare, rval = 1'0).
Adding EN signal on $procdff$3456 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:859$195_Y, Q = \is_alu_reg_reg).
Adding EN signal on $procdff$3455 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:858$194_Y, Q = \is_alu_reg_imm).
Adding SRST signal on $procdff$3453 ($dff) from module picorv32a (D = $procmux$2331_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4262 ($sdff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:855$191_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $procdff$3450 ($dff) from module picorv32a (D = $reduce_or$./designs/picorv32a/src/picorv32a.v:841$171_Y, Q = \is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $procdff$3448 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:857$193_Y, Q = \is_sb_sh_sw).
Adding EN signal on $procdff$3447 ($dff) from module picorv32a (D = $logic_or$./designs/picorv32a/src/picorv32a.v:1081$413_Y, Q = \is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $procdff$3446 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1075$404_Y, Q = \is_slli_srli_srai).
Adding EN signal on $procdff$3445 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:856$192_Y, Q = \is_lb_lh_lw_lbu_lhu).
Adding EN signal on $procdff$3443 ($dff) from module picorv32a (D = 1'0, Q = \compressed_instr).
Adding EN signal on $procdff$3442 ($dff) from module picorv32a (D = { \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [19:12] \mem_rdata_latched [20] \mem_rdata_latched [30:21] 1'0 }, Q = \decoded_imm_uj).
Adding EN signal on $procdff$3441 ($dff) from module picorv32a (D = $procmux$2377_Y, Q = \decoded_imm).
Adding EN signal on $procdff$3440 ($dff) from module picorv32a (D = \mem_rdata_latched [24:20], Q = \decoded_rs2).
Adding EN signal on $procdff$3439 ($dff) from module picorv32a (D = { $procmux$2132_Y $procmux$2216_Y }, Q = \decoded_rs1).
Adding SRST signal on $auto$ff.cc:266:slice$4273 ($dffe) from module picorv32a (D = \mem_rdata_latched [18:15], Q = \decoded_rs1 [3:0], rval = 4'0000).
Adding SRST signal on $auto$ff.cc:266:slice$4273 ($dffe) from module picorv32a (D = \mem_rdata_latched [19], Q = \decoded_rs1 [4], rval = 1'1).
Adding EN signal on $procdff$3438 ($dff) from module picorv32a (D = \mem_rdata_latched [11:7], Q = \decoded_rd).
Adding EN signal on $procdff$3437 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1073$391_Y, Q = \instr_timer).
Adding EN signal on $procdff$3436 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:853$189_Y, Q = \instr_waitirq).
Adding EN signal on $procdff$3435 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1072$387_Y, Q = \instr_maskirq).
Adding EN signal on $procdff$3434 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:852$185_Y, Q = \instr_retirq).
Adding EN signal on $procdff$3433 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1071$382_Y, Q = \instr_setq).
Adding EN signal on $procdff$3432 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1070$377_Y, Q = \instr_getq).
Adding EN signal on $procdff$3431 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1067$371_Y, Q = \instr_ecall_ebreak).
Adding EN signal on $procdff$3430 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1065$364_Y, Q = \instr_rdinstrh).
Adding EN signal on $procdff$3429 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1064$360_Y, Q = \instr_rdinstr).
Adding EN signal on $procdff$3428 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1062$356_Y, Q = \instr_rdcycleh).
Adding EN signal on $procdff$3427 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1060$348_Y, Q = \instr_rdcycle).
Adding SRST signal on $procdff$3426 ($dff) from module picorv32a (D = $procmux$2487_Y, Q = \instr_and, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4290 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1058$340_Y, Q = \instr_and).
Adding SRST signal on $procdff$3425 ($dff) from module picorv32a (D = $procmux$2491_Y, Q = \instr_or, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4292 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1057$336_Y, Q = \instr_or).
Adding SRST signal on $procdff$3424 ($dff) from module picorv32a (D = $procmux$2495_Y, Q = \instr_sra, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4294 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1056$332_Y, Q = \instr_sra).
Adding SRST signal on $procdff$3423 ($dff) from module picorv32a (D = $procmux$2499_Y, Q = \instr_srl, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4296 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1055$328_Y, Q = \instr_srl).
Adding SRST signal on $procdff$3422 ($dff) from module picorv32a (D = $procmux$2503_Y, Q = \instr_xor, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4298 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1054$324_Y, Q = \instr_xor).
Adding SRST signal on $procdff$3421 ($dff) from module picorv32a (D = $procmux$2507_Y, Q = \instr_sltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4300 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1053$320_Y, Q = \instr_sltu).
Adding SRST signal on $procdff$3420 ($dff) from module picorv32a (D = $procmux$2511_Y, Q = \instr_slt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4302 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1052$316_Y, Q = \instr_slt).
Adding SRST signal on $procdff$3419 ($dff) from module picorv32a (D = $procmux$2515_Y, Q = \instr_sll, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4304 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1051$312_Y, Q = \instr_sll).
Adding SRST signal on $procdff$3418 ($dff) from module picorv32a (D = $procmux$2519_Y, Q = \instr_sub, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4306 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1050$308_Y, Q = \instr_sub).
Adding SRST signal on $procdff$3417 ($dff) from module picorv32a (D = $procmux$2523_Y, Q = \instr_add, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4308 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1049$304_Y, Q = \instr_add).
Adding EN signal on $procdff$3416 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1047$300_Y, Q = \instr_srai).
Adding EN signal on $procdff$3415 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1046$296_Y, Q = \instr_srli).
Adding EN signal on $procdff$3414 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1045$292_Y, Q = \instr_slli).
Adding SRST signal on $procdff$3413 ($dff) from module picorv32a (D = $procmux$2533_Y, Q = \instr_andi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4313 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1043$288_Y, Q = \instr_andi).
Adding SRST signal on $procdff$3412 ($dff) from module picorv32a (D = $procmux$2537_Y, Q = \instr_ori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4315 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1042$286_Y, Q = \instr_ori).
Adding SRST signal on $procdff$3411 ($dff) from module picorv32a (D = $procmux$2541_Y, Q = \instr_xori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4317 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1041$284_Y, Q = \instr_xori).
Adding SRST signal on $procdff$3410 ($dff) from module picorv32a (D = $procmux$2545_Y, Q = \instr_sltiu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4319 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1040$282_Y, Q = \instr_sltiu).
Adding SRST signal on $procdff$3409 ($dff) from module picorv32a (D = $procmux$2549_Y, Q = \instr_slti, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4321 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1039$280_Y, Q = \instr_slti).
Adding SRST signal on $procdff$3408 ($dff) from module picorv32a (D = $procmux$2553_Y, Q = \instr_addi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4323 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1038$278_Y, Q = \instr_addi).
Adding EN signal on $procdff$3407 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1036$276_Y, Q = \instr_sw).
Adding EN signal on $procdff$3406 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1035$274_Y, Q = \instr_sh).
Adding EN signal on $procdff$3405 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1034$272_Y, Q = \instr_sb).
Adding EN signal on $procdff$3404 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1032$270_Y, Q = \instr_lhu).
Adding EN signal on $procdff$3403 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1031$268_Y, Q = \instr_lbu).
Adding EN signal on $procdff$3402 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1030$266_Y, Q = \instr_lw).
Adding EN signal on $procdff$3401 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1029$264_Y, Q = \instr_lh).
Adding EN signal on $procdff$3400 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1028$262_Y, Q = \instr_lb).
Adding SRST signal on $procdff$3399 ($dff) from module picorv32a (D = $procmux$2573_Y, Q = \instr_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4333 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1026$260_Y, Q = \instr_bgeu).
Adding SRST signal on $procdff$3398 ($dff) from module picorv32a (D = $procmux$2577_Y, Q = \instr_bltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4335 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1025$258_Y, Q = \instr_bltu).
Adding SRST signal on $procdff$3397 ($dff) from module picorv32a (D = $procmux$2581_Y, Q = \instr_bge, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4337 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1024$256_Y, Q = \instr_bge).
Adding SRST signal on $procdff$3396 ($dff) from module picorv32a (D = $procmux$2585_Y, Q = \instr_blt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4339 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1023$254_Y, Q = \instr_blt).
Adding SRST signal on $procdff$3395 ($dff) from module picorv32a (D = $procmux$2589_Y, Q = \instr_bne, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4341 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1022$252_Y, Q = \instr_bne).
Adding SRST signal on $procdff$3394 ($dff) from module picorv32a (D = $procmux$2593_Y, Q = \instr_beq, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4343 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1021$250_Y, Q = \instr_beq).
Adding EN signal on $procdff$3393 ($dff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:851$182_Y, Q = \instr_jalr).
Adding EN signal on $procdff$3392 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:850$179_Y, Q = \instr_jal).
Adding EN signal on $procdff$3391 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:849$178_Y, Q = \instr_auipc).
Adding EN signal on $procdff$3390 ($dff) from module picorv32a (D = $eq$./designs/picorv32a/src/picorv32a.v:848$177_Y, Q = \instr_lui).
Adding EN signal on $procdff$3389 ($dff) from module picorv32a (D = \mem_rdata_q, Q = \pcpi_insn).
Adding SRST signal on $procdff$3383 ($dff) from module picorv32a (D = $procmux$1191_Y, Q = \alu_wait, rval = 1'0).
Adding SRST signal on $procdff$3380 ($dff) from module picorv32a (D = $procmux$1110_Y, Q = \do_waitirq, rval = 1'0).
Adding SRST signal on $procdff$3378 ($dff) from module picorv32a (D = $logic_not$./designs/picorv32a/src/picorv32a.v:1401$511_Y, Q = \pcpi_timeout, rval = 1'0).
Adding SRST signal on $procdff$3377 ($dff) from module picorv32a (D = $procmux$1302_Y, Q = \pcpi_timeout_counter, rval = 4'1111).
Adding EN signal on $auto$ff.cc:266:slice$4361 ($sdff) from module picorv32a (D = $sub$./designs/picorv32a/src/picorv32a.v:1398$510_Y [3:0], Q = \pcpi_timeout_counter).
Adding EN signal on $procdff$3375 ($dff) from module picorv32a (D = $procmux$1317_Y [3:0], Q = \latched_rd [3:0]).
Adding EN signal on $procdff$3375 ($dff) from module picorv32a (D = $procmux$1317_Y [4], Q = \latched_rd [4]).
Adding SRST signal on $procdff$3374 ($dff) from module picorv32a (D = $procmux$1343_Y, Q = \latched_is_lb, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4387 ($sdff) from module picorv32a (D = $procmux$1343_Y, Q = \latched_is_lb).
Adding SRST signal on $procdff$3373 ($dff) from module picorv32a (D = $procmux$1356_Y, Q = \latched_is_lh, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4397 ($sdff) from module picorv32a (D = $procmux$1356_Y, Q = \latched_is_lh).
Adding SRST signal on $procdff$3372 ($dff) from module picorv32a (D = $procmux$1369_Y, Q = \latched_is_lu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4407 ($sdff) from module picorv32a (D = $procmux$1369_Y, Q = \latched_is_lu).
Adding EN signal on $procdff$3370 ($dff) from module picorv32a (D = \compressed_instr, Q = \latched_compr).
Adding SRST signal on $procdff$3369 ($dff) from module picorv32a (D = $procmux$1414_Y, Q = \latched_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4422 ($sdff) from module picorv32a (D = $procmux$1414_Y, Q = \latched_branch).
Adding SRST signal on $procdff$3368 ($dff) from module picorv32a (D = $procmux$1450_Y, Q = \latched_stalu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4432 ($sdff) from module picorv32a (D = $procmux$1450_Y, Q = \latched_stalu).
Adding SRST signal on $procdff$3367 ($dff) from module picorv32a (D = $procmux$1457_Y, Q = \latched_store, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4442 ($sdff) from module picorv32a (D = $procmux$1457_Y, Q = \latched_store).
Adding SRST signal on $procdff$3363 ($dff) from module picorv32a (D = $procmux$1511_Y, Q = \irq_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$4456 ($sdff) from module picorv32a (D = $ternary$./designs/picorv32a/src/picorv32a.v:1518$559_Y, Q = \irq_state).
Adding SRST signal on $procdff$3356 ($dff) from module picorv32a (D = $procmux$1124_Y, Q = \decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $procdff$3353 ($dff) from module picorv32a (D = $procmux$1683_Y, Q = \mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$4463 ($sdff) from module picorv32a (D = 1'0, Q = \mem_do_wdata).
Adding SRST signal on $procdff$3352 ($dff) from module picorv32a (D = $procmux$1687_Y, Q = \mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$4465 ($sdff) from module picorv32a (D = 1'0, Q = \mem_do_rdata).
Adding SRST signal on $procdff$3351 ($dff) from module picorv32a (D = $procmux$1743_Y, Q = \mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$4467 ($sdff) from module picorv32a (D = $procmux$1743_Y, Q = \mem_do_rinst).
Adding SRST signal on $procdff$3350 ($dff) from module picorv32a (D = $procmux$1768_Y, Q = \mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4483 ($sdff) from module picorv32a (D = $logic_and$./designs/picorv32a/src/picorv32a.v:1551$573_Y, Q = \mem_do_prefetch).
Adding SRST signal on $procdff$3348 ($dff) from module picorv32a (D = $procmux$1817_Y, Q = \timer, rval = 0).
Adding SRST signal on $procdff$3347 ($dff) from module picorv32a (D = { $5\next_irq_pending[31:0] [31:3] $5\next_irq_pending[31:0] [1:0] }, Q = { \irq_pending [31:3] \irq_pending [1:0] }, rval = 31'0000000000000000000000000000000).
Adding SRST signal on $procdff$3346 ($dff) from module picorv32a (D = $procmux$1835_Y, Q = \irq_mask, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:266:slice$4496 ($sdff) from module picorv32a (D = \cpuregs_rs1, Q = \irq_mask).
Adding SRST signal on $procdff$3345 ($dff) from module picorv32a (D = $procmux$1854_Y, Q = \irq_active, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4500 ($sdff) from module picorv32a (D = $procmux$1854_Y, Q = \irq_active).
Adding SRST signal on $procdff$3344 ($dff) from module picorv32a (D = $procmux$1879_Y, Q = \irq_delay, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4510 ($sdff) from module picorv32a (D = \irq_active, Q = \irq_delay).
Adding EN signal on $procdff$3341 ($dff) from module picorv32a (D = $procmux$1889_Y, Q = \reg_op2).
Adding EN signal on $procdff$3340 ($dff) from module picorv32a (D = $procmux$1906_Y, Q = \reg_op1).
Adding SRST signal on $procdff$3339 ($dff) from module picorv32a (D = $procmux$1969_Y, Q = \reg_next_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$4536 ($sdff) from module picorv32a (D = $procmux$1967_Y, Q = \reg_next_pc).
Adding SRST signal on $procdff$3338 ($dff) from module picorv32a (D = $procmux$1981_Y, Q = \reg_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$4538 ($sdff) from module picorv32a (D = $3\current_pc[31:0], Q = \reg_pc).
Adding SRST signal on $procdff$3337 ($dff) from module picorv32a (D = $procmux$2001_Y, Q = \count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$4540 ($sdff) from module picorv32a (D = $add$./designs/picorv32a/src/picorv32a.v:1542$569_Y, Q = \count_instr).
Adding SRST signal on $procdff$3336 ($dff) from module picorv32a (D = $add$./designs/picorv32a/src/picorv32a.v:1405$512_Y, Q = \count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$3333 ($dff) from module picorv32a (D = $procmux$2020_Y, Q = \eoi, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$4549 ($sdff) from module picorv32a (D = $procmux$2020_Y, Q = \eoi).
Adding SRST signal on $procdff$3332 ($dff) from module picorv32a (D = $procmux$2045_Y, Q = \pcpi_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4559 ($sdff) from module picorv32a (D = $procmux$2041_Y, Q = \pcpi_valid).
Adding SRST signal on $procdff$3331 ($dff) from module picorv32a (D = $procmux$1296_Y, Q = \trap, rval = 1'0).
Adding EN signal on $flatten\genblk1.pcpi_mul.$procdff$3495 ($dff) from module picorv32a (D = $flatten\genblk1.pcpi_mul.$procmux$3271_Y, Q = \genblk1.pcpi_mul.rs2).
Adding SRST signal on $auto$ff.cc:266:slice$4564 ($dffe) from module picorv32a (D = \reg_op2 [31], Q = \genblk1.pcpi_mul.rs2 [32], rval = 1'0).
Adding EN signal on $flatten\genblk1.pcpi_mul.$procdff$3494 ($dff) from module picorv32a (D = $flatten\genblk1.pcpi_mul.$procmux$3277_Y, Q = \genblk1.pcpi_mul.rs1).
Adding SRST signal on $auto$ff.cc:266:slice$4567 ($dffe) from module picorv32a (D = \reg_op1 [31], Q = \genblk1.pcpi_mul.rs1 [32], rval = 1'0).
Adding SRST signal on $flatten\genblk1.pcpi_mul.$procdff$3493 ($dff) from module picorv32a (D = { \genblk1.pcpi_mul.active [2:0] $flatten\genblk1.pcpi_mul.$procmux$3265_Y }, Q = \genblk1.pcpi_mul.active, rval = 4'0000).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4270 ($dffe) from module picorv32a.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4269 ($dffe) from module picorv32a.

26.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 192 unused cells and 230 unused wires.
<suppressed ~194 debug messages>

26.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~17 debug messages>

26.9. Rerunning OPT passes. (Maybe there is more to do..)

26.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

26.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

26.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~102 debug messages>
Removed a total of 34 cells.

26.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4417 ($dffe) from module picorv32a.

26.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 1 unused cells and 36 unused wires.
<suppressed ~2 debug messages>

26.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~2 debug messages>

26.16. Rerunning OPT passes. (Maybe there is more to do..)

26.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

26.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

26.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

26.20. Executing OPT_DFF pass (perform DFF optimizations).

26.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

26.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

26.23. Rerunning OPT passes. (Maybe there is more to do..)

26.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

26.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

26.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

26.27. Executing OPT_DFF pass (perform DFF optimizations).

26.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

26.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

26.30. Finished OPT passes. (There is nothing left to do.)

27. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3725 ($eq).
Removed top 3 bits (of 4) from port A of cell picorv32a.$shl$./designs/picorv32a/src/picorv32a.v:402$99 ($shl).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3737 ($eq).
Removed top 30 bits (of 32) from mux cell picorv32a.$ternary$./designs/picorv32a/src/picorv32a.v:600$158 ($mux).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:848$177 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:849$178 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:852$183 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:852$184 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:853$188 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:856$192 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:857$193 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:858$194 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:859$195 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3701 ($eq).
Removed top 4 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3717 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1022$251 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1030$265 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4394 ($ne).
Removed top 2 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3645 ($eq).
Removed top 1 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3649 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1040$281 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3657 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1047$299 ($eq).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3709 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3661 ($eq).
Removed top 3 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3665 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3669 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3673 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1070$375 ($eq).
Removed top 6 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1071$381 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1072$386 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1073$390 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4197 ($eq).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3697 ($eq).
Removed top 29 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1295$472 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1398$510 ($sub).
Removed top 28 bits (of 32) from port Y of cell picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1398$510 ($sub).
Removed top 31 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1405$512 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1415$517 ($sub).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4252 ($ne).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3741 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$eq$./designs/picorv32a/src/picorv32a.v:1519$557 ($eq).
Removed top 29 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1530$566 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32a.$add$./designs/picorv32a/src/picorv32a.v:1542$569 ($add).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3560 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3564 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3729 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3721 ($eq).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3641 ($eq).
Removed top 1 bits (of 33) from port Y of cell picorv32a.$sshr$./designs/picorv32a/src/picorv32a.v:1214$684 ($sshr).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4472 ($ne).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4474 ($ne).
Removed top 1 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4476 ($ne).
Removed top 5 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3873 ($eq).
Removed top 4 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3877 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3881 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4044 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3885 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4040 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3983 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3890 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3894 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4036 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3898 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4032 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3979 ($eq).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3902 ($eq).
Removed top 4 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3910 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3914 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3975 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3918 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3922 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3930 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3934 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3971 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3938 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3942 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3637 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3745 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3749 ($eq).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3757 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3761 ($eq).
Removed top 29 bits (of 32) from mux cell picorv32a.$procmux$1040 ($mux).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3705 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3765 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3769 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$eq$./designs/picorv32a/src/picorv32a.v:2273$690 ($eq).
Removed top 2 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3777 ($eq).
Removed top 6 bits (of 7) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$eq$./designs/picorv32a/src/picorv32a.v:2273$692 ($eq).
Removed top 31 bits (of 64) from port A of cell picorv32a.$flatten\genblk1.pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$699 ($mul).
Removed top 31 bits (of 64) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$699 ($mul).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3783 ($eq).
Removed top 32 bits (of 64) from mux cell picorv32a.$flatten\genblk1.pcpi_mul.$ternary$./designs/picorv32a/src/picorv32a.v:2339$706 ($mux).
Removed cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$3271 ($mux).
Removed cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$3277 ($mux).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4216 ($ne).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3789 ($eq).
Removed top 11 bits (of 31) from FF cell picorv32a.$auto$ff.cc:266:slice$4571 ($dffe).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3795 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$3301_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$3308_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32a.$flatten\genblk1.pcpi_mul.$procmux$3316_CMP0 ($eq).
Removed top 3 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3568 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3572 ($eq).
Removed top 1 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3629 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3576 ($eq).
Removed top 2 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3625 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3580 ($eq).
Removed top 3 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3621 ($eq).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3584 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3617 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3588 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3613 ($eq).
Removed top 2 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3611 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3828 ($eq).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3609 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3592 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4084 ($eq).
Removed top 1 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3602 ($eq).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3832 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4080 ($eq).
Removed top 2 bits (of 10) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3836 ($eq).
Removed top 3 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4076 ($eq).
Removed top 1 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3840 ($eq).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4072 ($eq).
Removed top 4 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3849 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4447 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32a.$procmux$2932_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4064 ($eq).
Removed top 4 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3853 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4453 ($ne).
Removed top 3 bits (of 9) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3857 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4060 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4531 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32a.$procmux$3219_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3861 ($eq).
Removed top 3 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4056 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3865 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$4052 ($eq).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3869 ($eq).
Removed top 5 bits (of 6) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4478 ($ne).
Removed top 2 bits (of 4) from port B of cell picorv32a.$auto$opt_dff.cc:195:make_patterns_logic$4480 ($ne).
Removed top 1 bits (of 4) from FF cell picorv32a.$auto$ff.cc:266:slice$4570 ($sdff).
Removed top 3 bits (of 5) from port B of cell picorv32a.$auto$fsm_map.cc:77:implement_pattern_cache$3600 ($eq).
Removed top 1 bits (of 3) from FF cell picorv32a.$auto$ff.cc:266:slice$4570 ($sdff).
Removed top 29 bits (of 32) from wire picorv32a.$0\irq_pending[31:0].
Removed top 29 bits (of 32) from wire picorv32a.$4\next_irq_pending[31:0].
Removed top 28 bits (of 32) from wire picorv32a.$sub$./designs/picorv32a/src/picorv32a.v:1398$510_Y.

28. Executing PEEPOPT pass (run peephole optimizers).

29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

30. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module picorv32a:
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1209$676 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1295$472 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1405$512 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1530$566 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1542$569 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1547$570 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1784$606 ($add).
  creating $macc model for $add$./designs/picorv32a/src/picorv32a.v:1847$631 ($add).
  creating $macc model for $flatten\genblk1.pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$699 ($mul).
  creating $macc model for $sub$./designs/picorv32a/src/picorv32a.v:1209$675 ($sub).
  creating $macc model for $sub$./designs/picorv32a/src/picorv32a.v:1398$510 ($sub).
  creating $macc model for $sub$./designs/picorv32a/src/picorv32a.v:1415$517 ($sub).
  creating $alu model for $macc $sub$./designs/picorv32a/src/picorv32a.v:1415$517.
  creating $alu model for $macc $sub$./designs/picorv32a/src/picorv32a.v:1398$510.
  creating $alu model for $macc $sub$./designs/picorv32a/src/picorv32a.v:1209$675.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1847$631.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1784$606.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1547$570.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1542$569.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1530$566.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1405$512.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1295$472.
  creating $alu model for $macc $add$./designs/picorv32a/src/picorv32a.v:1209$676.
  creating $macc cell for $flatten\genblk1.pcpi_mul.$mul$./designs/picorv32a/src/picorv32a.v:2299$699: $auto$alumacc.cc:365:replace_macc$4575
  creating $alu model for $lt$./designs/picorv32a/src/picorv32a.v:1211$679 ($lt): new $alu
  creating $alu model for $lt$./designs/picorv32a/src/picorv32a.v:1212$680 ($lt): merged with $sub$./designs/picorv32a/src/picorv32a.v:1209$675.
  creating $alu model for $eq$./designs/picorv32a/src/picorv32a.v:1210$678 ($eq): merged with $sub$./designs/picorv32a/src/picorv32a.v:1209$675.
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1295$472: $auto$alumacc.cc:485:replace_alu$4577
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1405$512: $auto$alumacc.cc:485:replace_alu$4580
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1530$566: $auto$alumacc.cc:485:replace_alu$4583
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1542$569: $auto$alumacc.cc:485:replace_alu$4586
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1547$570: $auto$alumacc.cc:485:replace_alu$4589
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1784$606: $auto$alumacc.cc:485:replace_alu$4592
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1847$631: $auto$alumacc.cc:485:replace_alu$4595
  creating $alu cell for $lt$./designs/picorv32a/src/picorv32a.v:1211$679: $auto$alumacc.cc:485:replace_alu$4598
  creating $alu cell for $add$./designs/picorv32a/src/picorv32a.v:1209$676: $auto$alumacc.cc:485:replace_alu$4605
  creating $alu cell for $sub$./designs/picorv32a/src/picorv32a.v:1209$675, $lt$./designs/picorv32a/src/picorv32a.v:1212$680, $eq$./designs/picorv32a/src/picorv32a.v:1210$678: $auto$alumacc.cc:485:replace_alu$4608
  creating $alu cell for $sub$./designs/picorv32a/src/picorv32a.v:1398$510: $auto$alumacc.cc:485:replace_alu$4615
  creating $alu cell for $sub$./designs/picorv32a/src/picorv32a.v:1415$517: $auto$alumacc.cc:485:replace_alu$4618
  created 12 $alu and 1 $macc cells.

31. Executing SHARE pass (SAT-based resource sharing).

32. Executing OPT pass (performing simple optimizations).

32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~65 debug messages>

32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

32.6. Executing OPT_DFF pass (perform DFF optimizations).

32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

32.9. Rerunning OPT passes. (Maybe there is more to do..)

32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~65 debug messages>

32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

32.13. Executing OPT_DFF pass (perform DFF optimizations).

32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

32.16. Finished OPT passes. (There is nothing left to do.)

33. Executing MEMORY pass.

33.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

33.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

33.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing picorv32a.cpuregs write port 0.

33.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

33.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\cpuregs'[0] in module `\picorv32a': no output FF found.
Checking read port address `\cpuregs'[0] in module `\picorv32a': no address FF found.

33.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

33.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

33.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

33.10. Executing MEMORY_COLLECT pass (generating $mem cells).

34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~139 debug messages>

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

35.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$4244 ($dffe) from module picorv32a (D = $procmux$2980_Y, Q = \mem_valid, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4210 ($dffe) from module picorv32a (D = $procmux$2922_Y, Q = \mem_state, rval = 2'00).

35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 12 unused cells and 78 unused wires.
<suppressed ~17 debug messages>

35.5. Rerunning OPT passes. (Removed registers in this run.)

35.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~2 debug messages>

35.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

35.8. Executing OPT_DFF pass (perform DFF optimizations).

35.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

35.10. Finished fast OPT passes.

36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \cpuregs in module \picorv32a:
  created 20 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 20 write mux blocks.

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~37 debug messages>

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~62 debug messages>

37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $pmux cell $procmux$1213:
      Old ports: A=\mem_rdata_word, B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:0] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7:0] }, Y=$procmux$1213_Y
      New ports: A=\mem_rdata_word [31:8], B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] }, Y=$procmux$1213_Y [31:8]
      New connections: $procmux$1213_Y [7:0] = \mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $procmux$1457: { \cpu_state [4] $auto$opt_reduce.cc:134:opt_pmux$4923 }
    New ctrl vector for $pmux cell $procmux$1697: { $auto$opt_reduce.cc:134:opt_pmux$4925 \cpu_state [4] }
    New ctrl vector for $pmux cell $procmux$1906: $auto$opt_reduce.cc:134:opt_pmux$4927
    Consolidated identical input bits for $mux cell $procmux$1956:
      Old ports: A={ $add$./designs/picorv32a/src/picorv32a.v:1530$566_Y [31:2] $3\current_pc[31:0] [1:0] }, B={ $add$./designs/picorv32a/src/picorv32a.v:1547$570_Y [31:1] $3\current_pc[31:0] [0] }, Y=$procmux$1956_Y
      New ports: A={ $add$./designs/picorv32a/src/picorv32a.v:1530$566_Y [31:2] $3\current_pc[31:0] [1] }, B=$add$./designs/picorv32a/src/picorv32a.v:1547$570_Y [31:1], Y=$procmux$1956_Y [31:1]
      New connections: $procmux$1956_Y [0] = $3\current_pc[31:0] [0]
    Consolidated identical input bits for $mux cell $procmux$1962:
      Old ports: A=$3\current_pc[31:0], B={ $add$./designs/picorv32a/src/picorv32a.v:1530$566_Y [31:2] $3\current_pc[31:0] [1:0] }, Y=$procmux$1962_Y
      New ports: A=$3\current_pc[31:0] [31:2], B=$add$./designs/picorv32a/src/picorv32a.v:1530$566_Y [31:2], Y=$procmux$1962_Y [31:2]
      New connections: $procmux$1962_Y [1:0] = $3\current_pc[31:0] [1:0]
    New ctrl vector for $pmux cell $procmux$2922: { $procmux$2932_CMP $auto$opt_reduce.cc:134:opt_pmux$4929 }
    Consolidated identical input bits for $pmux cell $procmux$3216:
      Old ports: A={ 24'000000000000000000000000 \mem_rdata [7:0] }, B={ 24'000000000000000000000000 \mem_rdata [15:8] 24'000000000000000000000000 \mem_rdata [23:16] 24'000000000000000000000000 \mem_rdata [31:24] }, Y=$3\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [7:0], B={ \mem_rdata [15:8] \mem_rdata [23:16] \mem_rdata [31:24] }, Y=$3\mem_rdata_word[31:0] [7:0]
      New connections: $3\mem_rdata_word[31:0] [31:8] = 24'000000000000000000000000
    Consolidated identical input bits for $mux cell $procmux$3225:
      Old ports: A={ 16'0000000000000000 \mem_rdata [15:0] }, B={ 16'0000000000000000 \mem_rdata [31:16] }, Y=$2\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [15:0], B=\mem_rdata [31:16], Y=$2\mem_rdata_word[31:0] [15:0]
      New connections: $2\mem_rdata_word[31:0] [31:16] = 16'0000000000000000
    Consolidated identical input bits for $pmux cell $procmux$3241:
      Old ports: A=\reg_op2, B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata
      New ports: A=\reg_op2 [31:8], B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata [31:8]
      New connections: \mem_la_wdata [7:0] = \reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:1519$558:
      Old ports: A=2'00, B=2'10, Y=$ternary$./designs/picorv32a/src/picorv32a.v:1519$558_Y
      New ports: A=1'0, B=1'1, Y=$ternary$./designs/picorv32a/src/picorv32a.v:1519$558_Y [1]
      New connections: $ternary$./designs/picorv32a/src/picorv32a.v:1519$558_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:365$83:
      Old ports: A={ \reg_op1 [31:2] 2'00 }, B={ \next_pc [31:2] 2'00 }, Y=\mem_la_addr
      New ports: A=\reg_op1 [31:2], B=\next_pc [31:2], Y=\mem_la_addr [31:2]
      New connections: \mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:394$98:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$./designs/picorv32a/src/picorv32a.v:394$98_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$./designs/picorv32a/src/picorv32a.v:394$98_Y [2] $ternary$./designs/picorv32a/src/picorv32a.v:394$98_Y [0] }
      New connections: { $ternary$./designs/picorv32a/src/picorv32a.v:394$98_Y [3] $ternary$./designs/picorv32a/src/picorv32a.v:394$98_Y [1] } = { $ternary$./designs/picorv32a/src/picorv32a.v:394$98_Y [2] $ternary$./designs/picorv32a/src/picorv32a.v:394$98_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$./designs/picorv32a/src/picorv32a.v:600$158:
      Old ports: A=2'11, B=2'00, Y=$procmux$2928_Y
      New ports: A=1'1, B=1'0, Y=$procmux$2928_Y [0]
      New connections: $procmux$2928_Y [1] = $procmux$2928_Y [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$1958:
      Old ports: A=$3\current_pc[31:0], B=$procmux$1956_Y, Y=$procmux$1958_Y
      New ports: A=$3\current_pc[31:0] [31:1], B=$procmux$1956_Y [31:1], Y=$procmux$1958_Y [31:1]
      New connections: $procmux$1958_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$1964:
      Old ports: A=$procmux$1958_Y, B=$procmux$1962_Y, Y=$procmux$1964_Y
      New ports: A=$procmux$1958_Y [31:1], B={ $procmux$1962_Y [31:2] $3\current_pc[31:0] [1] }, Y=$procmux$1964_Y [31:1]
      New connections: $procmux$1964_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
    Consolidated identical input bits for $mux cell $procmux$1967:
      Old ports: A=$procmux$1964_Y, B=$3\current_pc[31:0], Y=$procmux$1967_Y
      New ports: A=$procmux$1964_Y [31:1], B=$3\current_pc[31:0] [31:1], Y=$procmux$1967_Y [31:1]
      New connections: $procmux$1967_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module \picorv32a.
Performed a total of 17 changes.

37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

37.6. Executing OPT_SHARE pass.

37.7. Executing OPT_DFF pass (perform DFF optimizations).

37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 68 unused wires.
<suppressed ~1 debug messages>

37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~4 debug messages>

37.10. Rerunning OPT passes. (Maybe there is more to do..)

37.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

37.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

37.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

37.14. Executing OPT_SHARE pass.

37.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\cpuregs[9]$4643 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[9]).
Adding EN signal on $memory\cpuregs[8]$4641 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[8]).
Adding EN signal on $memory\cpuregs[7]$4639 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[7]).
Adding EN signal on $memory\cpuregs[6]$4637 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[6]).
Adding EN signal on $memory\cpuregs[5]$4635 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[5]).
Adding EN signal on $memory\cpuregs[4]$4633 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[4]).
Adding EN signal on $memory\cpuregs[3]$4631 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[3]).
Adding EN signal on $memory\cpuregs[2]$4629 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[2]).
Adding EN signal on $memory\cpuregs[1]$4627 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[1]).
Adding EN signal on $memory\cpuregs[19]$4663 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[19]).
Adding EN signal on $memory\cpuregs[18]$4661 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[18]).
Adding EN signal on $memory\cpuregs[17]$4659 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[17]).
Adding EN signal on $memory\cpuregs[16]$4657 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[16]).
Adding EN signal on $memory\cpuregs[15]$4655 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[15]).
Adding EN signal on $memory\cpuregs[14]$4653 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[14]).
Adding EN signal on $memory\cpuregs[13]$4651 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[13]).
Adding EN signal on $memory\cpuregs[12]$4649 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[12]).
Adding EN signal on $memory\cpuregs[11]$4647 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[11]).
Adding EN signal on $memory\cpuregs[10]$4645 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[10]).
Adding EN signal on $memory\cpuregs[0]$4625 ($dff) from module picorv32a (D = \cpuregs_wrdata, Q = \cpuregs[0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4231 ($dffe) from module picorv32a.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$4231 ($dffe) from module picorv32a.

37.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 20 unused cells and 23 unused wires.
<suppressed ~21 debug messages>

37.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

37.18. Rerunning OPT passes. (Maybe there is more to do..)

37.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

37.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

37.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

37.22. Executing OPT_SHARE pass.

37.23. Executing OPT_DFF pass (perform DFF optimizations).

37.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

37.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

37.26. Finished OPT passes. (There is nothing left to do.)

38. Executing TECHMAP pass (map to technology primitives).

38.1. Executing Verilog-2005 frontend: /nix/store/hsi2hxglwmlid19798r6swh0jn0l7isv-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/hsi2hxglwmlid19798r6swh0jn0l7isv-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

38.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \genblk1.pcpi_mul.rs1 * \genblk1.pcpi_mul.rs2 (33x33 bits, signed)
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_90_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$455891ae50d34e43581a517459d55825f76fa58e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000111111 for cells of type $fa.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~5844 debug messages>

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~6361 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~11184 debug messages>
Removed a total of 3728 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$14826 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [16], Q = \alu_shl [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14827 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [17], Q = \alu_shl [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14828 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [18], Q = \alu_shl [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14829 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [19], Q = \alu_shl [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14830 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [20], Q = \alu_shl [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14831 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [21], Q = \alu_shl [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14832 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [22], Q = \alu_shl [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14833 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [23], Q = \alu_shl [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14834 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [24], Q = \alu_shl [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14835 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [25], Q = \alu_shl [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14836 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [26], Q = \alu_shl [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14837 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [27], Q = \alu_shl [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14838 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [28], Q = \alu_shl [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14839 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [29], Q = \alu_shl [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14840 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [30], Q = \alu_shl [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14841 ($_DFF_P_) from module picorv32a (D = $techmap$shl$./designs/picorv32a/src/picorv32a.v:1213$681.$10\buffer[31:0] [31], Q = \alu_shl [15], rval = 1'0).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 452 unused cells and 3886 unused wires.
<suppressed ~453 debug messages>

39.5. Rerunning OPT passes. (Removed registers in this run.)

39.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

39.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

39.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$14739 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [31], Q = \decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14738 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [30], Q = \decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14737 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [29], Q = \decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14736 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [28], Q = \decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14735 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [27], Q = \decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14734 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [26], Q = \decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14733 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [25], Q = \decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14732 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [24], Q = \decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14731 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [23], Q = \decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14730 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [22], Q = \decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14729 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [21], Q = \decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14728 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [20], Q = \decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14727 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [19], Q = \decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14726 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [18], Q = \decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14725 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [17], Q = \decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14724 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [16], Q = \decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14723 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [15], Q = \decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14722 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [14], Q = \decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14721 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [13], Q = \decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14720 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [12], Q = \decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14719 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [11], Q = \decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14718 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [10], Q = \decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14717 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [9], Q = \decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14716 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [8], Q = \decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14715 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [7], Q = \decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14714 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [6], Q = \decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14713 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [5], Q = \decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14712 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [4], Q = \decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14711 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [3], Q = \decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14710 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [2], Q = \decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14709 ($_DFFE_PP_) from module picorv32a (D = $procmux$2377.Y_B [1], Q = \decoded_imm [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14613 ($_SDFF_PN0_) from module picorv32a (D = $procmux$1191.Y_B, Q = \alu_wait, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14554 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [3], Q = \latched_rd [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14553 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [2], Q = \latched_rd [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14552 ($_DFFE_PP_) from module picorv32a (D = \decoded_rd [1], Q = \latched_rd [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$14551 ($_DFFE_PP_) from module picorv32a (D = $procmux$1317.A [0], Q = \latched_rd [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$14227 ($_SDFFE_PN0P_) from module picorv32a (D = $procmux$979.B_AND_S [32], Q = \reg_next_pc [0]).

39.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 40 unused cells and 7 unused wires.
<suppressed ~41 debug messages>

39.10. Rerunning OPT passes. (Removed registers in this run.)

39.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

39.13. Executing OPT_DFF pass (perform DFF optimizations).

39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

39.15. Finished fast OPT passes.

40. Executing ABC pass (technology mapping using ABC).

40.1. Extracting gate netlist of module `\picorv32a' to `<abc-temp-dir>/input.blif'..
Replacing 1 occurrences of constant undef bits with constant zero bits
Extracted 14706 gates and 16275 wires to a netlist network with 1566 inputs and 920 outputs.

40.1.1. Executing ABC.
Running ABC command: "/nix/store/w728d371dww8bw3ll6ham7slap368140-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

40.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:     1168
ABC RESULTS:              NAND cells:      883
ABC RESULTS:               XOR cells:     2451
ABC RESULTS:              XNOR cells:      596
ABC RESULTS:             ORNOT cells:      232
ABC RESULTS:                OR cells:     2390
ABC RESULTS:               NOT cells:      955
ABC RESULTS:               NOR cells:      594
ABC RESULTS:            ANDNOT cells:     4009
ABC RESULTS:               MUX cells:     1884
ABC RESULTS:        internal signals:    13789
ABC RESULTS:           input signals:     1566
ABC RESULTS:          output signals:      920
Removing temp directory.

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.
<suppressed ~683 debug messages>

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

41.3. Executing OPT_DFF pass (perform DFF optimizations).

41.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 12 unused cells and 5012 unused wires.
<suppressed ~28 debug messages>

41.5. Finished fast OPT passes.

42. Executing HIERARCHY pass (managing design hierarchy).

42.1. Analyzing design hierarchy..
Top module:  \picorv32a

42.2. Analyzing design hierarchy..
Top module:  \picorv32a
Removed 0 unused modules.

43. Printing statistics.

=== picorv32a ===

   Number of wires:              14765
   Number of wire bits:          17969
   Number of public wires:         199
   Number of public wire bits:    2357
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16745
     $_ANDNOT_                    4009
     $_AND_                       1168
     $_DFFE_PP_                    957
     $_DFF_P_                      227
     $_MUX_                       1884
     $_NAND_                       883
     $_NOR_                        577
     $_NOT_                        943
     $_ORNOT_                      232
     $_OR_                        2389
     $_SDFFCE_PN0P_                 36
     $_SDFFCE_PP0P_                  9
     $_SDFFCE_PP1P_                  1
     $_SDFFE_PN0P_                 192
     $_SDFFE_PN1N_                   4
     $_SDFFE_PN1P_                  32
     $_SDFFE_PP0P_                   1
     $_SDFFE_PP1P_                   3
     $_SDFF_PN0_                   133
     $_SDFF_PP0_                    18
     $_XNOR_                       596
     $_XOR_                       2451

44. Executing CHECK pass (checking for obvious problems).
Checking module picorv32a...
Found and reported 0 problems.

45. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/picorv32a/runs/RUN_2024.07.21_15.03.35/tmp/synthesis/post_techmap.dot'.
Dumping module picorv32a to page 1.

46. Executing SHARE pass (SAT-based resource sharing).

47. Executing OPT pass (performing simple optimizations).

47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32a..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32a.
Performed a total of 0 changes.

47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32a'.
Removed a total of 0 cells.

47.6. Executing OPT_DFF pass (perform DFF optimizations).

47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..

47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32a.

47.9. Finished OPT passes. (There is nothing left to do.)

48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 0 unused cells and 37 unused wires.
<suppressed ~37 debug messages>

49. Printing statistics.

=== picorv32a ===

   Number of wires:              14728
   Number of wire bits:          17584
   Number of public wires:         162
   Number of public wire bits:    1972
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16745
     $_ANDNOT_                    4009
     $_AND_                       1168
     $_DFFE_PP_                    957
     $_DFF_P_                      227
     $_MUX_                       1884
     $_NAND_                       883
     $_NOR_                        577
     $_NOT_                        943
     $_ORNOT_                      232
     $_OR_                        2389
     $_SDFFCE_PN0P_                 36
     $_SDFFCE_PP0P_                  9
     $_SDFFCE_PP1P_                  1
     $_SDFFE_PN0P_                 192
     $_SDFFE_PN1N_                   4
     $_SDFFE_PN1P_                  32
     $_SDFFE_PP0P_                   1
     $_SDFFE_PP1P_                   3
     $_SDFF_PN0_                   133
     $_SDFF_PP0_                    18
     $_XNOR_                       596
     $_XOR_                       2451

mapping tbuf

50. Executing TECHMAP pass (map to technology primitives).

50.1. Executing Verilog-2005 frontend: /home/srujan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/srujan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

50.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

51. Executing SIMPLEMAP pass (map simple cells to gate primitives).

52. Executing TECHMAP pass (map to technology primitives).

52.1. Executing Verilog-2005 frontend: /home/srujan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/srujan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

52.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

53. Executing SIMPLEMAP pass (map simple cells to gate primitives).

54. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

54.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\picorv32a':
  mapped 1613 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

55. Printing statistics.

=== picorv32a ===

   Number of wires:              16392
   Number of wire bits:          19248
   Number of public wires:         162
   Number of public wire bits:    1972
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18409
     $_ANDNOT_                    4009
     $_AND_                       1168
     $_MUX_                       3548
     $_NAND_                       883
     $_NOR_                        577
     $_NOT_                        943
     $_ORNOT_                      232
     $_OR_                        2389
     $_XNOR_                       596
     $_XOR_                       2451
     sky130_fd_sc_hd__dfxtp_2     1613

[INFO]: USING STRATEGY AREA 0

56. Executing ABC pass (technology mapping using ABC).

56.1. Extracting gate netlist of module `\picorv32a' to `/tmp/yosys-abc-bQrvVv/input.blif'..
Extracted 16796 gates and 18477 wires to a netlist network with 1679 inputs and 1673 outputs.

56.1.1. Executing ABC.
Running ABC command: "/nix/store/w728d371dww8bw3ll6ham7slap368140-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-bQrvVv/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-bQrvVv/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-bQrvVv/input.blif 
ABC: + read_lib -w /openlane/designs/picorv32a/runs/RUN_2024.07.21_15.03.35/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.04 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/picorv32a/runs/RUN_2024.07.21_15.03.35/tmp/synthesis/trimmed.lib" has 176 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.06 sec
ABC: Memory =    9.44 MB. Time =     0.06 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/picorv32a/runs/RUN_2024.07.21_15.03.35/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/picorv32a/runs/RUN_2024.07.21_15.03.35/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 24730.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 24730.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 6 -S 750.0 
ABC: + upsize -D 24730.0 
ABC: Current delay (8811.21 ps) does not exceed the target delay (24730.00 ps). Upsizing is not performed.
ABC: + dnsize -D 24730.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  14745 ( 21.4 %)   Cap = 10.4 ff (  5.3 %)   Area =   127604.88 ( 79.2 %)   Delay =  9261.38 ps  (  0.5 %)               
ABC: Path  0 --      57 : 0    4 pi                       A =   0.00  Df =  30.8  -17.6 ps  S =  48.3 ps  Cin =  0.0 ff  Cout =   9.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    3455 : 2    3 sky130_fd_sc_hd__and2b_2 A =   8.76  Df = 246.2  -28.8 ps  S =  52.5 ps  Cin =  1.6 ff  Cout =   6.5 ff  Cmax = 310.4 ff  G =  388  
ABC: Path  2 --    3459 : 4    1 sky130_fd_sc_hd__or4_2   A =   8.76  Df = 882.4 -563.2 ps  S =  90.5 ps  Cin =  1.5 ff  Cout =   1.5 ff  Cmax = 310.4 ff  G =   95  
ABC: Path  3 --    3475 : 4    1 sky130_fd_sc_hd__or4_2   A =   8.76  Df =1541.7-1126.2 ps  S =  96.0 ps  Cin =  1.5 ff  Cout =   2.5 ff  Cmax = 310.4 ff  G =  160  
ABC: Path  4 --    3498 : 4    5 sky130_fd_sc_hd__o211a_2 A =  10.01  Df =1843.9-1222.3 ps  S =  89.8 ps  Cin =  2.4 ff  Cout =  11.8 ff  Cmax = 268.3 ff  G =  477  
ABC: Path  5 --    3500 : 4    4 sky130_fd_sc_hd__or4_2   A =   8.76  Df =2509.3-1731.2 ps  S = 138.2 ps  Cin =  1.5 ff  Cout =  13.0 ff  Cmax = 310.4 ff  G =  815  
ABC: Path  6 --   15464 : 4    5 sky130_fd_sc_hd__nor4_2  A =  12.51  Df =2915.6-2069.1 ps  S = 421.6 ps  Cin =  4.3 ff  Cout =  14.1 ff  Cmax =  64.1 ff  G =  309  
ABC: Path  7 --   15480 : 4    5 sky130_fd_sc_hd__and4_2  A =  10.01  Df =3259.3-2153.6 ps  S = 108.7 ps  Cin =  1.5 ff  Cout =  14.1 ff  Cmax = 300.3 ff  G =  879  
ABC: Path  8 --   15490 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =3557.3-2174.6 ps  S = 123.1 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path  9 --   15499 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =3858.3-2195.5 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 10 --   15508 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =4159.4-2216.4 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 11 --   15517 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =4460.5-2237.3 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 12 --   15527 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =4761.6-2258.2 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 13 --   15538 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =5062.7-2279.1 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 14 --   15548 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =5363.8-2300.0 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 15 --   15557 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =5664.8-2320.7 ps  S = 123.0 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1118  
ABC: Path 16 --   15572 : 4    5 sky130_fd_sc_hd__and4_2  A =  10.01  Df =5947.1-2341.3 ps  S = 106.1 ps  Cin =  1.5 ff  Cout =  14.1 ff  Cmax = 300.3 ff  G =  874  
ABC: Path 17 --   15580 : 4    5 sky130_fd_sc_hd__and4_2  A =  10.01  Df =6229.5-2354.9 ps  S = 106.0 ps  Cin =  1.5 ff  Cout =  14.1 ff  Cmax = 300.3 ff  G =  879  
ABC: Path 18 --   15590 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =6526.9-2375.4 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 19 --   15599 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =6827.9-2396.3 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 20 --   15609 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =7129.0-2417.2 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 21 --   15618 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =7430.1-2438.1 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 22 --   15629 : 4    6 sky130_fd_sc_hd__and4_2  A =  10.01  Df =7731.2-2459.0 ps  S = 123.2 ps  Cin =  1.5 ff  Cout =  17.8 ff  Cmax = 300.3 ff  G = 1119  
ABC: Path 23 --   15638 : 4    4 sky130_fd_sc_hd__and4_2  A =  10.01  Df =8010.9-2471.4 ps  S =  98.7 ps  Cin =  1.5 ff  Cout =  12.5 ff  Cmax = 300.3 ff  G =  778  
ABC: Path 24 --   15644 : 3    4 sky130_fd_sc_hd__and3_2  A =   7.51  Df =8239.5-2458.5 ps  S =  91.7 ps  Cin =  1.5 ff  Cout =  13.4 ff  Cmax = 309.5 ff  G =  853  
ABC: Path 25 --   15647 : 2    4 sky130_fd_sc_hd__and2_2  A =   7.51  Df =8426.6-2423.5 ps  S =  88.4 ps  Cin =  1.5 ff  Cout =  13.8 ff  Cmax = 303.0 ff  G =  900  
ABC: Path 26 --   15652 : 3    4 sky130_fd_sc_hd__and3_2  A =   7.51  Df =8635.0-2403.1 ps  S =  73.4 ps  Cin =  1.5 ff  Cout =   9.3 ff  Cmax = 309.5 ff  G =  594  
ABC: Path 27 --   15660 : 3    3 sky130_fd_sc_hd__and3_2  A =   7.51  Df =8861.2-2388.9 ps  S =  96.3 ps  Cin =  1.5 ff  Cout =  14.4 ff  Cmax = 309.5 ff  G =  919  
ABC: Path 28 --   15665 : 3    1 sky130_fd_sc_hd__a21oi_2 A =   8.76  Df =9261.4 -260.4 ps  S = 418.4 ps  Cin =  4.6 ff  Cout =  33.4 ff  Cmax = 128.2 ff  G =  733  
ABC: Start-point = pi56 (\irq_mask [18]).  End-point = po1045 ($auto$rtlil.cc:2684:MuxGate$53916).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 1679/ 1673  lat =    0  nd = 14745  edge =  36685  area =127612.51  delay =34.00  lev = 34
ABC: + write_blif /tmp/yosys-abc-bQrvVv/output.blif 

56.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:      222
ABC RESULTS:   sky130_fd_sc_hd__mux4_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      179
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      131
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:       90
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:     1047
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:      572
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:      292
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       60
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nand4b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:       28
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      296
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:      183
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        9
ABC RESULTS:         rusty_inv cells:      145
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:      176
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       67
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:      923
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       72
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:      277
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:       33
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:      208
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:       75
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:      137
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      309
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      287
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:      379
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      354
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      317
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:       79
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      358
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:      203
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:      305
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      518
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      282
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:      174
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:      115
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       34
ABC RESULTS:   sky130_fd_sc_hd__buf_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:      867
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:     1511
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:     2997
ABC RESULTS:        internal signals:    15125
ABC RESULTS:           input signals:     1679
ABC RESULTS:          output signals:     1673
Removing temp directory.

57. Executing SETUNDEF pass (replace undef values with defined constants).

58. Executing HILOMAP pass (mapping to constant drivers).

59. Executing SPLITNETS pass (splitting up multi-bit signals).

60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32a..
Removed 34 unused cells and 19238 unused wires.
<suppressed ~150 debug messages>

61. Executing INSBUF pass (insert buffer cells for connected wires).
Add picorv32a/$auto$insbuf.cc:97:execute$70423: \mem_la_wdata [0] -> \pcpi_rs2 [0]
Add picorv32a/$auto$insbuf.cc:97:execute$70424: \mem_la_wdata [1] -> \pcpi_rs2 [1]
Add picorv32a/$auto$insbuf.cc:97:execute$70425: \mem_la_wdata [2] -> \pcpi_rs2 [2]
Add picorv32a/$auto$insbuf.cc:97:execute$70426: \mem_la_wdata [3] -> \pcpi_rs2 [3]
Add picorv32a/$auto$insbuf.cc:97:execute$70427: \mem_la_wdata [4] -> \pcpi_rs2 [4]
Add picorv32a/$auto$insbuf.cc:97:execute$70428: \mem_la_wdata [5] -> \pcpi_rs2 [5]
Add picorv32a/$auto$insbuf.cc:97:execute$70429: \mem_la_wdata [6] -> \pcpi_rs2 [6]
Add picorv32a/$auto$insbuf.cc:97:execute$70430: \mem_la_wdata [7] -> \pcpi_rs2 [7]

62. Executing CHECK pass (checking for obvious problems).
Checking module picorv32a...
Found and reported 0 problems.

63. Printing statistics.

=== picorv32a ===

   Number of wires:              16127
   Number of wire bits:          16509
   Number of public wires:        1475
   Number of public wire bits:    1857
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16407
     rusty_inv                     145
     sky130_fd_sc_hd__a2111o_2       4
     sky130_fd_sc_hd__a211o_2      287
     sky130_fd_sc_hd__a211oi_2     137
     sky130_fd_sc_hd__a21bo_2      131
     sky130_fd_sc_hd__a21boi_2      35
     sky130_fd_sc_hd__a21o_2       379
     sky130_fd_sc_hd__a21oi_2      572
     sky130_fd_sc_hd__a221o_2      203
     sky130_fd_sc_hd__a221oi_2       2
     sky130_fd_sc_hd__a22o_2       358
     sky130_fd_sc_hd__a22oi_2      222
     sky130_fd_sc_hd__a2bb2o_2      67
     sky130_fd_sc_hd__a311o_2       22
     sky130_fd_sc_hd__a311oi_2       1
     sky130_fd_sc_hd__a31o_2       176
     sky130_fd_sc_hd__a31oi_2        7
     sky130_fd_sc_hd__a32o_2        27
     sky130_fd_sc_hd__a32oi_2        1
     sky130_fd_sc_hd__a41o_2         2
     sky130_fd_sc_hd__and2_2       317
     sky130_fd_sc_hd__and2b_2      309
     sky130_fd_sc_hd__and3_2       354
     sky130_fd_sc_hd__and3b_2       64
     sky130_fd_sc_hd__and4_2       296
     sky130_fd_sc_hd__and4b_2       11
     sky130_fd_sc_hd__and4bb_2      24
     sky130_fd_sc_hd__buf_1       2997
     sky130_fd_sc_hd__buf_2         14
     sky130_fd_sc_hd__conb_1        41
     sky130_fd_sc_hd__dfxtp_2     1613
     sky130_fd_sc_hd__inv_2          2
     sky130_fd_sc_hd__mux2_2      1511
     sky130_fd_sc_hd__mux4_2        64
     sky130_fd_sc_hd__nand2_2      923
     sky130_fd_sc_hd__nand2b_2       2
     sky130_fd_sc_hd__nand3_2      179
     sky130_fd_sc_hd__nand3b_2      28
     sky130_fd_sc_hd__nand4_2       90
     sky130_fd_sc_hd__nand4b_2       3
     sky130_fd_sc_hd__nor2_2       867
     sky130_fd_sc_hd__nor2b_2        3
     sky130_fd_sc_hd__nor3_2        75
     sky130_fd_sc_hd__nor3b_2        7
     sky130_fd_sc_hd__nor4_2        27
     sky130_fd_sc_hd__o2111a_2       2
     sky130_fd_sc_hd__o2111ai_2      3
     sky130_fd_sc_hd__o211a_2      305
     sky130_fd_sc_hd__o211ai_2      79
     sky130_fd_sc_hd__o21a_2       282
     sky130_fd_sc_hd__o21ai_2      277
     sky130_fd_sc_hd__o21ba_2      174
     sky130_fd_sc_hd__o21bai_2      60
     sky130_fd_sc_hd__o221a_2       27
     sky130_fd_sc_hd__o221ai_2       1
     sky130_fd_sc_hd__o22a_2       115
     sky130_fd_sc_hd__o22ai_2        4
     sky130_fd_sc_hd__o2bb2a_2      34
     sky130_fd_sc_hd__o2bb2ai_2      1
     sky130_fd_sc_hd__o311a_2       35
     sky130_fd_sc_hd__o311ai_2       2
     sky130_fd_sc_hd__o31a_2        13
     sky130_fd_sc_hd__o31ai_2        8
     sky130_fd_sc_hd__o32a_2        11
     sky130_fd_sc_hd__or2_2        518
     sky130_fd_sc_hd__or2b_2       208
     sky130_fd_sc_hd__or3_2        183
     sky130_fd_sc_hd__or3b_2        33
     sky130_fd_sc_hd__or4_2         72
     sky130_fd_sc_hd__or4b_2         9
     sky130_fd_sc_hd__or4bb_2       13
     sky130_fd_sc_hd__xnor2_2     1047
     sky130_fd_sc_hd__xor2_2       292

   Chip area for module '\picorv32a': 162107.974400

64. Executing Verilog backend.
Dumping module `\picorv32a'.

65. Executing JSON backend.

End of script. Logfile hash: 76c2a59a39, CPU: user 4.97s system 0.03s, MEM: 115.08 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 16.0.6 -fPIC -Os)
Time spent: 74% 2x abc (13 sec), 8% 42x opt_expr (1 sec), ...
